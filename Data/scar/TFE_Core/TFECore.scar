debug_TFECore_FileName = "TFECore"

RaceDetails = {}
function RaceDetails:new (_RaceName, _RaceIndex, _RaceResourceInfo)

    local o = 
    {
    	--Constants
	    RaceName = RaceName,
	    RaceIndex = _RaceIndex,
	    RaceResourceInfo = _RaceResourceInfo 
    }
	self.__index = self
   	return setmetatable(o, self)
end

PlayerDetails = {}
function PlayerDetails:new (_Player, _PlayerIndex, _RaceDetails)

    local o = 
    {
    	    --Constants
	    Player = _Player,
	    PlayerIndex = _PlayerIndex,
	    RaceDetails = _RaceDetails,   
	    
	    --Variables
	    CurrentNumberOfResearchedGlobals = 
	    {
	    		RT_Requisition = 0,
	    		RT_Power =  0,
	    		RT_Pop =  0,
	    		RT_Faith = 0, 
	    		RT_Souls = 0
	    },
	    
	    CurrentAddResources = 
	    	{
	    		RT_Requisition = 0,
	    		RT_Power =  0,
	    		RT_Pop =  0,
	    		RT_Faith = 0, 
	    		RT_Souls = 0
	    	}
    }
	self.__index = self
	return setmetatable(o, self)
end

function PlayerDetails.ClearCurrentResourceBonuses()
	self.CurrentAddResources = 
	    	{
	    		RT_Requisition = 0,
	    		RT_Power =  0,
	    		RT_Pop =  0,
	    		RT_Faith = 0, 
	    		RT_Souls = 0
	    	}
end


import("TFE_Core/Imports/TFECore_Imports.scar")


function Core_Game_Load()
	
	local debugFuncName = "Core_Game_Load"	
	
	Core_CheckForSecondaryScars()
	Rule_AddInterval(Core_MainLoop, g_WorldTimeFidelity)
	
end

function Core_Init_Load()
	local debugFuncName = "Core_Init_Load"	
	
	if pcall(Core_GetAllPlayers) == false then
		Log(3, 0, debug_TFECore_FileName, debugFuncName, "Cannot run CORE function 'Core_GetAllPlayers'!")
	end
	
	if pcall(Setup_AlphaLegion) == false then
		Log(2, 0, debug_TFECore_FileName, debugFuncName, "Cannot run function 'Setup_AlphaLegion'!")
	end 
	Setup_PassiveResourceGeneration()
	if pcall(Setup_PassiveResourceGeneration) == false then 
		Log(2, 0, debug_TFECore_FileName, debugFuncName, "Cannot run function 'Setup_PassiveResourceGeneration'!")
	end
	
	if pcall(Setup_SquadManager) == false then 
		Log(3, 0, debug_TFECore_FileName, debugFuncName, "Cannot run function 'Setup_SquadManager'!")
	end
	
	if pcall(Setup_GlobalsStorage) == false then 
		Log(3, 0, debug_TFECore_FileName, debugFuncName, "Cannot run function 'Setup_GlobalsStorage'!")
	end
	
	if pcall(Setup_StrategicPoints) == false then 
		Log(2, 0, debug_TFECore_FileName, debugFuncName, "Cannot run function 'Setup_StrategicPoints'!")
	elseif pcall(Setup_MatureSystem) == false then
		Log(2, 0, debug_TFECore_FileName, debugFuncName, "Cannot run function 'Setup_MatureSystem'!")
	end	
	
	if pcall(Setup_UpkeepSystem) == false then 
		Log(2, 0, debug_TFECore_FileName, debugFuncName, "Cannot run function 'Setup_UpkeepSystem'!")
	end
	
	if pcall(Setup_NewCoverSystem) == false then 
		Log(2, 0, debug_TFECore_FileName, debugFuncName, "Cannot run function 'Setup_NewCoverSystem'!")
	end
	
end

function Core_CheckForSecondaryScars()

	if g_TrueRandomRace_Enabled == true then

		TrueRandomRace_Setup()
	
	end

end

function Core_GetAllPlayers()

	for i = 1, g_PlayerCount do

		local Player = World_GetPlayerAt(i-1)
		local RaceName = Player_GetRaceName( Player ) 
		local RaceIndex = Player_GetRace( Player ) 
		
		table.insert(g_AllPlayers, PlayerDetails:new( Player, PlayerIndex, RaceDetails:new (RaceName, RaceIndex, g_FactionSpecificResourceGeneration[RaceName] )))
	
		--Move this later
		if (UnitCosting[RaceName] == nil) then
			pcall(import, 'upkeep/races/'..RaceName..'.scar')
		end
		
	end

end


function Core_MainLoop()
	
	if(g_PreviousMainLoopHasCompleted) then
	
		g_PreviousMainLoopHasCompleted = false
		Set_UpdatedGameTime()
		Set_AllSquads_Immediate()
		Set_CustomCoverModifiers()
		Set_PlayerUpdatedDetails()
		Set_Upkeep()
		Set_ResourceMature()
		Implement_UpkeepAndMature()
	
		g_PreviousMainLoopHasCompleted = true
		
	end
	
end

function Set_PlayerUpdatedDetails()

	for i = 1, g_PlayerCount do
	
		Set_PlayerGlobalsStatus(g_AllPlayers[i])
	
	end

end


function Set_PlayerGlobalsStatus(_Player) 

	if(_Player.CurrentNumberOfResearchedGlobals.RT_Requisition < _Player.RaceDetails.RaceResourceInfo.MaxNumberOfGlobals.RT_Requisition) then
	
		for j = 1 + _Player.CurrentNumberOfResearchedGlobals.RT_Requisition, _Player.RaceDetails.RaceResourceInfo.MaxNumberOfGlobals.RT_Requisition do
		
			if(Player_GetResearchState( _Player.Player, _Player.RaceDetails.RaceResourceInfo.RaceGlobals.RT_Requisition[j] ) == "RS_Complete" ) then
			
				_Player.CurrentNumberOfResearchedGlobals.RT_Requisition = _Player.CurrentNumberOfResearchedGlobals.RT_Requisition + 1
				
			end
		end		
	end
			
	if(_Player.CurrentNumberOfResearchedGlobals.RT_Power < _Player.RaceDetails.RaceResourceInfo.MaxNumberOfGlobals.RT_Power) then
		
		for j = 1 + _Player.CurrentNumberOfResearchedGlobals.RT_Power, _Player.RaceDetails.RaceResourceInfo.MaxNumberOfGlobals.RT_Power do
			if(Player_GetResearchState( _Player.Player, _Player.RaceDetails.RaceResourceInfo.RaceGlobals.RT_Power[j] ) == "RS_Complete" ) then
			
				_Player.CurrentNumberOfResearchedGlobals.RT_Power = _Player.CurrentNumberOfResearchedGlobals.RT_Power + 1
				
			end
		end
	end
	
	if(_Player.CurrentNumberOfResearchedGlobals.RT_Pop < _Player.RaceDetails.RaceResourceInfo.MaxNumberOfGlobals.RT_Pop) then	
	
		for j = 1 + _Player.CurrentNumberOfResearchedGlobals.RT_Pop, _Player.RaceDetails.RaceResourceInfo.MaxNumberOfGlobals.RT_Pop do
			if(Player_GetResearchState( _Player.Player, _Player.RaceDetails.RaceResourceInfo.RaceGlobals.RT_Pop[j] ) == "RS_Complete" ) then
			
				_Player.CurrentNumberOfResearchedGlobals.RT_Pop = _Player.CurrentNumberOfResearchedGlobals.RT_Pop + 1
				
			end
		end
	end
			
	if(_Player.CurrentNumberOfResearchedGlobals.RT_Faith < _Player.RaceDetails.RaceResourceInfo.MaxNumberOfGlobals.RT_Faith) then
	
		for j = 1 + _Player.CurrentNumberOfResearchedGlobals.RT_Faith, _Player.RaceDetails.RaceResourceInfo.MaxNumberOfGlobals.RT_Faith do
			if(Player_GetResearchState( _Player.Player, _Player.RaceDetails.RaceResourceInfo.RaceGlobals.RT_Faith[j] ) == "RS_Complete" ) then
			
				_Player.CurrentNumberOfResearchedGlobals.RT_Faith = _Player.CurrentNumberOfResearchedGlobals.RT_Faith + 1
				
			end
		end
	end
	
	if(_Player.CurrentNumberOfResearchedGlobals.RT_Souls < _Player.RaceDetails.RaceResourceInfo.MaxNumberOfGlobals.RT_Souls) then
		
		for j = 1 + _Player.CurrentNumberOfResearchedGlobals.RT_Souls, _Player.RaceDetails.RaceResourceInfo.MaxNumberOfGlobals.RT_Souls do
			if(Player_GetResearchState( _Player.Player, _Player.RaceDetails.RaceResourceInfo.RaceGlobals.RT_Souls[j] ) == "RS_Complete" ) then
			
				_Player.CurrentNumberOfResearchedGlobals.RT_Souls = _Player.CurrentNumberOfResearchedGlobals.RT_Souls + 1
				
			end
		end		
	end
end


function Implement_UpkeepAndMature()
	
	
	for i = 1, g_PlayerCount do			
	
		if(Player_IsAlive(g_AllPlayers[i])) then
		
			Player_AddResource(g_AllPlayers[i], RT_Requisition, g_AllPlayers[i].CurrentAddResources.RT_Requisition)
			Player_AddResource(g_AllPlayers[i], RT_Power, g_AllPlayers[i].CurrentAddResources.RT_Power)
			Player_AddResource(g_AllPlayers[i], RT_Pop, g_AllPlayers[i].CurrentAddResources.RT_Pop)
			Player_AddResource(g_AllPlayers[i], RT_Faith, g_AllPlayers[i].CurrentAddResources.RT_Faith)
			Player_AddResource(g_AllPlayers[i], RT_Souls, g_AllPlayers[i].CurrentAddResources.RT_Souls)
			
		end
		
		g_AllPlayers[i].ClearCurrentResourceBonuses()
	end

end

