debug_TFECore_FileName = "TFECore"

import("TFE_Core/Imports/TFECore_Imports.scar")


function TFE_Game_Load()
	
	local debugFuncName = "TFE_Game_Load"	
	
	CheckForSecondaryScars()
	Rule_Add(MainLoop)--, 0.25)
	
end

function TFE_Init_Load()
	if pcall(GetAllPlayers) == false then
		Log(3, 0, debug_TFECore_FileName, debugFuncName, "Cannot run CORE function 'GetAllPlayers'!")
	end
	
	if pcall(AlphaLegion_Setup) == false then
		Log(2, 0, debug_TFECore_FileName, debugFuncName, "Cannot run function 'AlphaLegion_Setup'!")
	end 
	
	if pcall(PassiveResourceGeneration_Immediate_Load) == false then 
		Log(2, 0, debug_TFECore_FileName, debugFuncName, "Cannot run function 'PassiveResourceGeneration_Immediate_Load'!")
	end
	
	if pcall(Initialise_SquadManager) == false then 
		Log(3, 0, debug_TFECore_FileName, debugFuncName, "Cannot run function 'Initialise_SquadManager'!")
	end
	
	if pcall(Initialise_GlobalsStorage) == false then 
		Log(3, 0, debug_TFECore_FileName, debugFuncName, "Cannot run function 'Initialise_GlobalsStorage'!")
	end
	
	if pcall(SetupStrategicPoints) == false then 
		Log(2, 0, debug_TFECore_FileName, debugFuncName, "Cannot run function 'SetupMature'!")
	elseif pcall(Rule_ActivateMature) == false then
		Log(2, 0, debug_TFECore_FileName, debugFuncName, "Cannot run function 'Rule_ActivateMature'!")
	end	
	
	if pcall(Rule_ActivateUpkeep) == false then 
		Log(2, 0, debug_TFECore_FileName, debugFuncName, "Cannot run function 'Rule_ActivateUpkeep'!")
	end
	
	if pcall(InitNewCoverSystems) == false then 
		Log(2, 0, debug_TFECore_FileName, debugFuncName, "Cannot run function 'InitNewCoverSystems'!")
	end
	
end

function CheckForSecondaryScars()

	if g_TrueRandomRace_Enabled == true then

		TrueRandomRace_Setup()
	
	end

end

function GetAllPlayers()

	for i = 1, g_PlayerCount do

		local Player = World_GetPlayerAt(i-1)
		local RaceName = Player_GetRaceName( Player ) 
		local RaceIndex = Player_GetRace( Player ) 
		
		table.insert(g_AllPlayers, Player)
		table.insert(g_AllPlayersRace, RaceName)
		table.insert(g_AllPlayersRace_AsIndex, RaceIndex)
		
		--Move this later
		if (UnitCosting[RaceName] == nil) then
			pcall(import, 'upkeep/races/'..RaceName..'.scar')
		end
		
	end

end


function MainLoop()

	if(g_PreviousMainLoopHasCompleted) then
	
		g_PreviousMainLoopHasCompleted = false
		SetUpdatedGameTime()
		UpdateAllSquads_Immediate()--, g_UpdateAllSquadsRate)
		Rule_CheckCoverStatus()
		Rule_CheckForNewSquads_Upkeep()
		Rule_DoMature()
		
	end
	
	g_PreviousMainLoopHasCompleted = true
end



