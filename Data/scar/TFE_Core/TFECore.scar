debug_TFECore_FileName = "TFECore"


import("TFE_Core/Imports/TFECore_Imports.scar")


function TFE_Immediate_Load()
	local debugFuncName = "TFE_Immediete_Load"

	if pcall(GetAllPlayers) == false then
		Log(3, 0, debug_TFECore_FileName, debugFuncName, "Cannot run CORE function 'GetAllPlayers'!")
	end
	if pcall(AlphaLegion_Setup) == false then
		Log(2, 0, debug_TFECore_FileName, debugFuncName, "Cannot run function 'AlphaLegion_Setup'!")
	end 
	if pcall(PassiveResourceGeneration_Immediate_Load) == false then 
		Log(2, 0, debug_TFECore_FileName, debugFuncName, "Cannot run function 'PassiveResourceGeneration_Immediate_Load'!")
	end
	Initialise_GlobalsStorage()
	--[[if pcall(Initialise_GlobalsStorage) == false then 
		Log(3, 0, debug_TFECore_FileName, debugFuncName, "Cannot run function 'Initialise_GlobalsStorage'!")
	end]]
	
	
end

function TFE_Load()
	local debugFuncName = "TFE_Load"
	
	Log(0, 0, debug_TFECore_FileName, debugFuncName, "Starting: '"..debugFuncName.."'...")
	
	Rule_AddOneShot(InitNewCoverSystems,1)
	SetupMature()
	Rule_AddOneShot(Rule_ActivateUpkeep,g_UpkeepActivationDelay)
	
	Log(0, 0, debug_TFECore_FileName, debugFuncName, "Finished: '"..debugFuncName.."'!")
end

function GetAllPlayers()

	for i = 1, g_PlayerCount do

		local Player = World_GetPlayerAt(i-1)
		local RaceName = Player_GetRaceName( Player ) 
		local RaceIndex = Player_GetRace( Player ) 
		
		table.insert(g_AllPlayers, Player)
		table.insert(g_AllPlayersRace, RaceName)
		table.insert(g_AllPlayersRace_AsIndex, RaceIndex)
		
		--Move this later
		if (UnitCosting[RaceName] == nil) then
			pcall(import, 'upkeep/races/'..RaceName..'.scar')
		end
		
	end

end



