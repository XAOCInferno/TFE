--Required scar
import("TFE_Core/Classes/NumberNode.scar")

--[[
	Thresholds are sorted lists  
]]

ThresholdsTable = {}
function ThresholdsTable:new ()
	AddStacktrace("ThresholdsTable:new")

    local ThresholdsTableObject = 
    {
		--Variables
		Data = {},
		DataLength = 0	
	}

	self.__index = self

	RemoveStacktrace()

	return setmetatable(ThresholdsTableObject, self)

end 

function ThresholdsTable:Insert (_WeightedKey, _Data)

	AddStacktrace("ThresholdsTable:Insert")

	local Added = false

	if self.DataLength == 0 then

		self.Data[1] = NumberNode:new (_WeightedKey, _Data)
		self.DataLength = self.DataLength + 1
		return

	end

	for i = 1, self.DataLength do			

		if _WeightedKey >= self.Data[i].WeightedKey then

			self:ShiftRight(i)
			self.Data[i] = NumberNode:new (_WeightedKey, _Data)
			Added = true
			break;

		end

	end

	if Added == false then

		self.Data[self.DataLength + 1] = NumberNode:new (_WeightedKey, _Data)

	end

	RemoveStacktrace()

end 

function ThresholdsTable:ShiftRight(_StartKey)

	for i = 1, self.DataLength - _StartKey do

		self.Data[_StartKey + i] = self.Data[_StartKey]

	end

	self.Data[_StartKey] = nil

end