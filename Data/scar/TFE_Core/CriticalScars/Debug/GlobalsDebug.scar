debug_GlobalsDebug_FileName = "GlobalsDebug"

g_WrittenLogs = {}

--Writes a custom log to the console
function Log(_LogType, _Verbosity, _ModuleName, _FunctionName, _Line)
	if(g_DebugMode) then
		if(_Verbosity == 0) then
		
			--Warning type, Mod Name, world time, function path, line
			print("("..g_LogTypes[_LogType]..") ["..g_ModAbbreviation.."] ("..g_WorldTime.."s) ".._ModuleName.."/".._FunctionName..":  ".._Line)
			
		elseif(_Verbosity == 1) then
		
			--Warning type, Mod Name, world time, line
			print("("..g_LogTypes[_LogType]..") ["..g_ModAbbreviation.."] ("..g_WorldTime.."s) ".._Line)
			
		elseif(_Verbosity == 2) then
		
			--Warning type, Mod Name, line
			print("("..g_LogTypes[_LogType]..") ["..g_ModAbbreviation.."] ".._Line)
			
		elseif(_Verbosity == 3) then	
		
			--Just mod name and line
			print("["..g_ModAbbreviation.."] ".._Line)
			
		elseif(_Verbosity == 4) then
			
			--What dummy makes a print statement called from a function... me -q-q
			print(_Line)

		else
			--Just print the line, also in case they put an invalid number
			Log(2,0,_ModuleName, _FunctionName, "Verbosity: '".._Verbosity.."' Is not valid! Defaulting to Print.") 
			print(_Line)
		end
	end
end


--Writes a custom log to the console, if it hasn't been written before
function LogOnce(_LogType, _Verbosity, _ModuleName, _FunctionName, _Line)

	local LogID = _Verbosity.._ModuleName.._FunctionName.._Line
	contains, _ = TableContains(g_WrittenLogs, LogID)
	if(contains) then 
		return true 
	else
		table.insert(g_WrittenLogs, LogID)
		Log(_LogType, _Verbosity, _ModuleName, _FunctionName, _Line)
	end
	
end

function LogError(_ModuleName, _FunctionName, _Line)
	g_DebugMode = true --Error is so severe we should force debug on!
	Log(3, 0, _ModuleName, _FunctionName, _Line)
	Log(1, 4, "", "", "|")
	Log(1, 4, "", "", "--------------------------------------------")
	Log(1, 4, "", "", "------TFE CORE FATAL ERROR------")
	Log(1, 4, "", "", "-----------CORE STOPPED------------")
	Log(1, 4, "", "", "--------------------------------------------")
	Log(1, 4, "", "", "|")
	ErrorPause()

end