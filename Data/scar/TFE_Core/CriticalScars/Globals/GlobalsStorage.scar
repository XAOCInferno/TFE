--------------------
--Settings imports--
--------------------

import("TFE_Core/CriticalScars/Globals/Globals_Imports.lua")

--local GlobalUniqueSquadID = 0
local UsedUniqueSquadIDs = {}
local UsedUniqueEntityIDs = {}

---------------
--Main Script--
---------------
function Setup_GlobalsStorage()

	AddStacktrace("Setup_GlobalsStorage")

	Set_UpdatedGameTime()

	RemoveStacktrace()

end

function Set_UpdatedGameTime()

	AddStacktrace("Set_UpdatedGameTime")

	g_PreviousWorldTime = g_WorldTime
	g_WorldTime = World_GetGameTime()
	g_TimeSinceWorldTimeUpdate = g_WorldTime - g_PreviousWorldTime

	RemoveStacktrace()
	
end

function Setup_StrategicPoints()

	AddStacktrace("Setup_StrategicPoints")
	
	Log(eLOG_TYPE_INFO, eLOG_FULL, "Starting: 'Setup_StrategicPoints'...")
	
	local SetupNewPoint = function(eSquadGroupID, i, eSquadID)
		
		table.insert( g_AllStrategicPointsStructs, StrategicPoint:new (eSquadID, -1, g_WorldTime) )
		g_NumberStratPoints = g_NumberStratPoints + 1

	end
	
	g_NumberStratPoints = 0
	World_GetStrategicPoints(EGroup_CreateIfNotFound( "tmpAllStratPoints" ) )
	EGroup_ForEachEx(EGroup_FromName("tmpAllStratPoints"),  SetupNewPoint, true, true)
	EGroup_Destroy("tmpAllStratPoints")
	
	Log(eLOG_TYPE_INFO, eLOG_FULL,  "Finished: 'Setup_StrategicPoints'!")

	RemoveStacktrace()

end

--Used to tell the difference between a time and the world time, EG: get how long something has been alive for
function GetWorldLifetime(StartTime)

	--Simple Getter functions don't need StackTrace
	return g_WorldTime - StartTime

end

function GetUniqueSG(BaseSGName)

	AddStacktrace("GetUniqueSG")
	
	BaseSGName = BaseSGName or "UniqueSG."
	local UniqueSG = BaseSGName	

	while(SGroup_Exists(UniqueSG) == true or TableContains(UsedUniqueSquadIDs,UniqueSG)) do
	
		local index1, index2, index3, index4, index5 = Rdm_GetInts5()
		UniqueSG = BaseSGName..index1..index2..index3..index4..index5
		
	end
	
	table.insert(UsedUniqueSquadIDs,UniqueSG) 
	
	Log(eLOG_TYPE_INFO, eLOG_FULL, "Assigned Unique Squad ID: "..UniqueSG)
	
	RemoveStacktrace()
	return SGroup_Create(UniqueSG)
	
end

function GetUniqueEG(BaseEGName)

	AddStacktrace("GetUniqueEG")
	
	BaseEGName = BaseEGName or "UniqueEG."
	local UniqueEG = BaseEGName	

	while(EGroup_Exists(UniqueEG) == true or TableContains(UsedUniqueEntityIDs,UniqueEG)) do
	
		local index1, index2, index3, index4, index5 = Rdm_GetInts5()
		UniqueEG = BaseEGName..index1..index2..index3..index4..index5
		
	end
	
	table.insert(UsedUniqueEntityIDs,UniqueEG) 
	
	Log(eLOG_TYPE_INFO, eLOG_FULL, "Assigned Unique Entity ID: "..UniqueEG)
	
	RemoveStacktrace()
	
	return EGroup_Create(UniqueEG)
	
end

function Rdm_GetInts5()
	
	return World_GetRand(1,9), World_GetRand(1,9), World_GetRand(1,9), World_GetRand(1,9), World_GetRand(1,9) 
	
end
