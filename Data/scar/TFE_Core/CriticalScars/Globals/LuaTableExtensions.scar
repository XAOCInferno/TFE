debug_LuaTableExtensions_FileName = "LuaTableExtensions"

function TableClear(_Tbl)

	for i in pairs (_Tbl) do
    	table.remove(_Tbl,i)
	end

end

function TableHasItemAtPositionOrID(_Tbl, _ItemPositionOrID)
	
	local debugFuncName = "TableContains_ExactID"

	if(_Tbl == nil) then 		
			Log(1, 0, debug_LuaTableExtensions_FileName, debugFuncName,  "Table is nil, returning false as default.")
		return nil, nil 
	else
		if(_Tbl[_ItemPositionOrID] == nil) then
			return false
		end
	end
	
	return true

end

function TableContains(_Tbl, _Desired)

	local debugFuncName = "TableContains"

	if(_Tbl == nil) then 		
			Log(1, 0, debug_LuaTableExtensions_FileName, debugFuncName,  "Table is nil, returning false as default.")
		return nil, nil 
	else
		for i in pairs (_Tbl) do
    		if(_Tbl[i] == _Desired) then
    			return true, i
    		end
		end
	end
	return false

end

function TableRemoveDuplicates(_AddTbl, _CompareTbl)
	local debugFuncName = "TableRemoveDuplicates"

	if(_AddTbl == nil) then 		
			Log(1, 0, debug_LuaTableExtensions_FileName, debugFuncName,  "Add Table is Nil!")
		return 
	elseif(_CompareTbl == nil) then 		
			Log(1, 0, debug_LuaTableExtensions_FileName, debugFuncName,  "Compare Table is Nil!")
		return
	else
		for item in pairs (_CompareTbl) do
    		local contains, index = TableContains(_AddTbl, item)
    		if(contains == true) then
    			table.remove(_AddTbl, index)
    		end
		end
	end
	
	return addTbl

end

function TableLength(_Tbl)

	if(_Tbl == nil) then 		
		Log(1, 0, debug_LuaTableExtensions_FileName, "TableLength",  "Table is Nil!")
		return 0
	end
	
	local count = 0
	for _ in pairs(_Tbl) do count = count + 1 end
	return count
	
end

function TableMergeValues(_Tbl1, _Tbl2)

	local debugFuncName = "TableMergeValues"
	local NewTable = _Tbl1
	
	if(_Tbl1 == nil) then 		
		Log(1, 0, debug_LuaTableExtensions_FileName, debugFuncName,  "Table1 is nil!.")
		return _Tbl2
	elseif(_Tbl2 == nil) then 		
		Log(1, 0, debug_LuaTableExtensions_FileName, debugFuncName,  "Table2 is nil!")
		return _Tbl1
	else
		for i in pairs (_Tbl1) do
	    		if(_Tbl2[i] == nil) then
	    			return NewTable
	    		end
	    		
	    		NewTable[i] = _Tbl1[i] + _Tbl2[i]
		end
	end

end
