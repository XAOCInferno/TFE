import("TFE_Core/Subscars/Achievements/Imports/Achievements_Imports.scar")

eACHIEVEMENT_STATUS_COMPLETE = OS_Complete
eACHIEVEMENT_STATUS_FAILED = OS_Failed
eACHIEVEMENT_STATUS_ONGOING = 3

eACHIEVEMENT_VIEW_ACTIVE = 0
eACHIEVEMENT_VIEW_HIDDEN = 1

g_AllTrackedAchievements = {}


function Setup_Achievements()
	
	AddStacktrace("Setup_Achievements")
	
	Log(eLOG_TYPE_INFO, eLOG_SIMPLE, "Starting: 'Setup_Achievements'...")

	--[[Objective identifier locale keys must be an even number... because why not...]]
	local Generic_Achievement_FirstBlood = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050022, short_desc_id = 20050023, help_tip_id = 20050024 } )
	--[[local Generic_Achievement_KillUnits = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050006, short_desc_id = 20050007, help_tip_id = 20050008 } )
	local Generic_Achievement_KillUnits2 = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050046, short_desc_id = 20050047, help_tip_id = 20050048 } )
	local Generic_Achievement_KillUnits3 = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050050, short_desc_id = 20050051, help_tip_id = 20050052 } )
	local Generic_Achievement_KDRatio = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050018, short_desc_id = 20050019, help_tip_id = 20050020 } )
	local Generic_Achievement_KillLeaders = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050042, short_desc_id = 20050043, help_tip_id = 20050044 } )
	local Generic_Achievement_QuickKills = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050062, short_desc_id = 20050063, help_tip_id = 20050064 } )
	local Generic_Achievement_QuickKills2 = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050066, short_desc_id = 20050067, help_tip_id = 20050068 } )

	local Generic_Achievement_RazeBuildings = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050010, short_desc_id = 20050011, help_tip_id = 20050012 } )
	local Generic_Achievement_RazeBuildings2 = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050078, short_desc_id = 20050079, help_tip_id = 20050080 } )
	local Generic_Achievement_RazeBuildings3 = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050082, short_desc_id = 20050083, help_tip_id = 20050084 } )
	local Generic_Achievement_RazeLPs = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050070, short_desc_id = 20050071, help_tip_id = 20050072 } )
	local Generic_Achievement_RazeGens = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050074, short_desc_id = 20050075, help_tip_id = 20050076 } )
	local Generic_Achievement_RazeThermo = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050086, short_desc_id = 20050087, help_tip_id = 20050088 } )

	local Generic_Achievement_ExpensiveArmy = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050014, short_desc_id = 20050015, help_tip_id = 20050016 } )
	local Generic_Achievement_ExpensiveArmy2 = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050054, short_desc_id = 20050055, help_tip_id = 20050056 } )
	local Generic_Achievement_ExpensiveArmy3 = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050058, short_desc_id = 20050059, help_tip_id = 20050060 } )

	--local Generic_Achievement_HighUpkeep = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050026, short_desc_id = 20050027, help_tip_id = 20050028 } ) --TODO
	local Generic_Achievement_ManyMaturedPoints = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050030, short_desc_id = 20050031, help_tip_id = 20050032 } )
	--local Generic_Achievement_ManyMaturedPointsDuration = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050034, short_desc_id = 20050034, help_tip_id = 20050035 } ) --TODO
	local Generic_Achievement_Tier4Unit = CreateAchievement(eACHIEVEMENT_VIEW_ACTIVE, { title_id = 20050038, short_desc_id = 20050039, help_tip_id = 20050040 } )
	]]
	
	Generic_Achievement_FirstBlood.Get_AchievementStatus = function( _self )
		
		for i = 1, g_PlayerCount do
			 
			if (g_AllPlayers[i].StatsManager.UnitsKilled >= 1 ) then

				return eACHIEVEMENT_STATUS_COMPLETE, g_AllPlayers[i]

			end

		end

		return eACHIEVEMENT_STATUS_ONGOING

	end

	Generic_Achievement_FirstBlood.EndSuccess = function( _self, _PlayerStruct )

		_PlayerStruct.CurrentAddResources.RT_Red = _PlayerStruct.CurrentAddResources.RT_Red + 50
		--[[Log(eLOG_TYPE_INFO, eLOG_SIMPLE, _PlayerStruct.StatsManager.TimestampedUnitKills[1].Units)
		Log(eLOG_TYPE_INFO, eLOG_SIMPLE, _PlayerStruct.StatsManager.TimestampedUnitKills[1].KillerPosition)
		Log(eLOG_TYPE_INFO, eLOG_SIMPLE, _PlayerStruct.StatsManager.TimestampedUnitKills[1].KillerPosition[1])]]
		World_FXEvent("data:Art/Events/generic/ui/achievement_first_blood_generic", _PlayerStruct.StatsManager.TimestampedUnitKills[1].KillerPosition )

	end


	--[[
	Generic_Achievement_KillUnits.Get_AchievementStatus = function( _self )
		
		for i = 1, g_PlayerCount do
			
			if (g_AllPlayers[i].StatsManager.UnitsKilled >= 30) then

				return eACHIEVEMENT_STATUS_COMPLETE, g_AllPlayers[i]

			end

		end

		return eACHIEVEMENT_STATUS_ONGOING

	end

	Generic_Achievement_KillUnits.EndSuccess = function( _self, _PlayerStruct )

		_PlayerStruct.CurrentAddResources.RT_Requisition = _PlayerStruct.CurrentAddResources.RT_Requisition + 50

	end

	Generic_Achievement_KillUnits2.Get_AchievementStatus = function( _self )
		
		for i = 1, g_PlayerCount do
			
			if (g_AllPlayers[i].StatsManager.UnitsKilled >= 60) then

				return eACHIEVEMENT_STATUS_COMPLETE, g_AllPlayers[i]

			end

		end

		return eACHIEVEMENT_STATUS_ONGOING

	end

	Generic_Achievement_KillUnits2.EndSuccess = function( _self, _PlayerStruct )

		_PlayerStruct.CurrentAddResources.RT_Requisition = _PlayerStruct.CurrentAddResources.RT_Requisition + 75
		_PlayerStruct.CurrentAddResources.RT_Power = _PlayerStruct.CurrentAddResources.RT_Power + 25

	end

	Generic_Achievement_KillUnits3.Get_AchievementStatus = function( _self )
		
		for i = 1, g_PlayerCount do
			
			if (g_AllPlayers[i].StatsManager.UnitsKilled >= 100) then

				return eACHIEVEMENT_STATUS_COMPLETE, g_AllPlayers[i]

			end

		end

		return eACHIEVEMENT_STATUS_ONGOING

	end

	Generic_Achievement_KillUnits3.EndSuccess = function( _self, _PlayerStruct )

		_PlayerStruct.CurrentAddResources.RT_Requisition = _PlayerStruct.CurrentAddResources.RT_Requisition + 50
		_PlayerStruct.CurrentAddResources.RT_Power = _PlayerStruct.CurrentAddResources.RT_Power + 50

	end

	Generic_Achievement_RazeBuildings.Get_AchievementStatus = function( _self )
		
		for i = 1, g_PlayerCount do
			
			if (g_AllPlayers[i].StatsManager.StructuresKilled >= 3) then
					
				return eACHIEVEMENT_STATUS_COMPLETE, g_AllPlayers[i]

			end

		end

		return eACHIEVEMENT_STATUS_ONGOING

	end
	
	Generic_Achievement_RazeBuildings.EndSuccess = function( _self, _PlayerStruct )

		_PlayerStruct.CurrentAddResources.RT_Requisition = _PlayerStruct.CurrentAddResources.RT_Requisition + 25
		_PlayerStruct.CurrentAddResources.RT_Power = _PlayerStruct.CurrentAddResources.RT_Power + 25

	end

	Generic_Achievement_RazeBuildings2.Get_AchievementStatus = function( _self )
		
		for i = 1, g_PlayerCount do
			
			if (g_AllPlayers[i].StatsManager.StructuresKilled >= 6) then
					
				return eACHIEVEMENT_STATUS_COMPLETE, g_AllPlayers[i]

			end

		end

		return eACHIEVEMENT_STATUS_ONGOING

	end
	
	Generic_Achievement_RazeBuildings2.EndSuccess = function( _self, _PlayerStruct )

		_PlayerStruct.CurrentAddResources.RT_Requisition = _PlayerStruct.CurrentAddResources.RT_Requisition + 50
		_PlayerStruct.CurrentAddResources.RT_Power = _PlayerStruct.CurrentAddResources.RT_Power + 50

	end

	Generic_Achievement_RazeBuildings3.Get_AchievementStatus = function( _self )
		
		for i = 1, g_PlayerCount do
			
			if (g_AllPlayers[i].StatsManager.StructuresKilled >= 10) then
					
				return eACHIEVEMENT_STATUS_COMPLETE, g_AllPlayers[i]

			end

		end

		return eACHIEVEMENT_STATUS_ONGOING

	end
	
	Generic_Achievement_RazeBuildings3.EndSuccess = function( _self, _PlayerStruct )

		_PlayerStruct.CurrentAddResources.RT_Requisition = _PlayerStruct.CurrentAddResources.RT_Requisition + 75
		_PlayerStruct.CurrentAddResources.RT_Power = _PlayerStruct.CurrentAddResources.RT_Power + 75

	end

	Generic_Achievement_RazeLPs.Get_AchievementStatus = function( _self )
		
		for i = 1, g_PlayerCount do
			
			if (g_AllPlayers[i].StatsManager.LPsKilled >= 4) then
					
				return eACHIEVEMENT_STATUS_COMPLETE, g_AllPlayers[i]

			end

		end

		return eACHIEVEMENT_STATUS_ONGOING

	end
	
	Generic_Achievement_RazeLPs.EndSuccess = function( _self, _PlayerStruct )

		_PlayerStruct.CurrentAddResources.RT_Requisition = _PlayerStruct.CurrentAddResources.RT_Requisition + 50
		_PlayerStruct.CurrentAddResources.RT_Power = _PlayerStruct.CurrentAddResources.RT_Power + 25

	end

	Generic_Achievement_RazeGens.Get_AchievementStatus = function( _self )
		
		for i = 1, g_PlayerCount do
			
			if (g_AllPlayers[i].StatsManager.GensKilled >= 3) then
					
				return eACHIEVEMENT_STATUS_COMPLETE, g_AllPlayers[i]

			end

		end

		return eACHIEVEMENT_STATUS_ONGOING

	end
	
	Generic_Achievement_RazeGens.EndSuccess = function( _self, _PlayerStruct )

		_PlayerStruct.CurrentAddResources.RT_Requisition = _PlayerStruct.CurrentAddResources.RT_Requisition + 25
		_PlayerStruct.CurrentAddResources.RT_Power = _PlayerStruct.CurrentAddResources.RT_Power + 50

	end

	Generic_Achievement_RazeThermo.Get_AchievementStatus = function( _self )
		
		for i = 1, g_PlayerCount do
			
			if (g_AllPlayers[i].StatsManager.ThermosKilled >= 1) then
					
				return eACHIEVEMENT_STATUS_COMPLETE, g_AllPlayers[i]

			end

		end

		return eACHIEVEMENT_STATUS_ONGOING

	end
	
	Generic_Achievement_RazeThermo.EndSuccess = function( _self, _PlayerStruct )

		_PlayerStruct.CurrentAddResources.RT_Requisition = _PlayerStruct.CurrentAddResources.RT_Requisition + 25
		_PlayerStruct.CurrentAddResources.RT_Power = _PlayerStruct.CurrentAddResources.RT_Power + 50

	end

	Generic_Achievement_ExpensiveArmy.Get_AchievementStatus = function( _self )
		
		for i = 1, g_PlayerCount do

			local ArmyCostScore = 0
			ArmyCostScore = ArmyCostScore + (g_AllPlayers[i].StatsManager.ActiveArmyCost.RT_Requisition * 0.4)
			ArmyCostScore = ArmyCostScore + g_AllPlayers[i].StatsManager.ActiveArmyCost.RT_Power

			if (ArmyCostScore > 400) then

				return eACHIEVEMENT_STATUS_COMPLETE, g_AllPlayers[i]

			end

		end

		return eACHIEVEMENT_STATUS_ONGOING

	end

	Generic_Achievement_ExpensiveArmy.EndSuccess = function( _self, _PlayerStruct )

		_PlayerStruct.CurrentAddResources.RT_Power = _PlayerStruct.CurrentAddResources.RT_Power + 35

	end

	Generic_Achievement_ExpensiveArmy2.Get_AchievementStatus = function( _self )
		
		for i = 1, g_PlayerCount do

			local ArmyCostScore = 0
			ArmyCostScore = ArmyCostScore + (g_AllPlayers[i].StatsManager.ActiveArmyCost.RT_Requisition * 0.4)
			ArmyCostScore = ArmyCostScore + g_AllPlayers[i].StatsManager.ActiveArmyCost.RT_Power

			if (ArmyCostScore > 1000) then

				return eACHIEVEMENT_STATUS_COMPLETE, g_AllPlayers[i]

			end

		end

		return eACHIEVEMENT_STATUS_ONGOING

	end

	Generic_Achievement_ExpensiveArmy2.EndSuccess = function( _self, _PlayerStruct )

		_PlayerStruct.CurrentAddResources.RT_Requisition = _PlayerStruct.CurrentAddResources.RT_Requisition + 25
		_PlayerStruct.CurrentAddResources.RT_Power = _PlayerStruct.CurrentAddResources.RT_Power + 50

	end

	Generic_Achievement_ExpensiveArmy3.Get_AchievementStatus = function( _self )
		
		for i = 1, g_PlayerCount do

			local ArmyCostScore = 0
			ArmyCostScore = ArmyCostScore + (g_AllPlayers[i].StatsManager.ActiveArmyCost.RT_Requisition * 0.4)
			ArmyCostScore = ArmyCostScore + g_AllPlayers[i].StatsManager.ActiveArmyCost.RT_Power

			if (ArmyCostScore > 1700) then

				return eACHIEVEMENT_STATUS_COMPLETE, g_AllPlayers[i]

			end

		end

		return eACHIEVEMENT_STATUS_ONGOING

	end

	Generic_Achievement_ExpensiveArmy3.EndSuccess = function( _self, _PlayerStruct )

		_PlayerStruct.CurrentAddResources.RT_Requisition = _PlayerStruct.CurrentAddResources.RT_Requisition + 50
		_PlayerStruct.CurrentAddResources.RT_Power = _PlayerStruct.CurrentAddResources.RT_Power + 75

	end

	Generic_Achievement_KDRatio.Get_AchievementStatus = function( _self )
		
		for i = 1, g_PlayerCount do
			 
			if (g_AllPlayers[i].StatsManager.UnitsKilled >= 25 and g_AllPlayers[i].StatsManager.UnitsKilled / g_AllPlayers[i].StatsManager.UnitsLost > 1.5) then

				return eACHIEVEMENT_STATUS_COMPLETE, g_AllPlayers[i]

			end

		end

		return eACHIEVEMENT_STATUS_ONGOING

	end

	Generic_Achievement_KDRatio.EndSuccess = function( _self, _PlayerStruct )

		_PlayerStruct.CurrentAddResources.RT_Requisition = _PlayerStruct.CurrentAddResources.RT_Requisition + 50

	end

	Generic_Achievement_ManyMaturedPoints.Get_AchievementStatus = function( _self )
		
		local AchievedPlayer = nil
		
		for i = 1, g_PlayerCount do

			local MaturedPointsCount = 0

			for z = 1, g_NumberStratPoints do

				if(g_AllStrategicPointsStructs[z].OwnedBy == g_AllPlayers[i].PlayerIndex) then

					--This code is now being duplicated in multiple places, should make it a class function of Strategic Point
					if(g_AllStrategicPointsStructs[z].FullyMatured) then

						MaturedPointsCount = MaturedPointsCount + 1

						if(MaturedPointsCount >= 3) then

							AchievedPlayer = g_AllPlayers[i]
							break

						end

					end
					
				end

			end

			if(MaturedPointsCount >= 4) then

				return eACHIEVEMENT_STATUS_COMPLETE, AchievedPlayer

			end

		end

		return eACHIEVEMENT_STATUS_ONGOING

	end

	Generic_Achievement_ManyMaturedPoints.EndSuccess = function( _self, _PlayerStruct )

		_PlayerStruct.CurrentAddResources.RT_Requisition = _PlayerStruct.CurrentAddResources.RT_Requisition + 50

	end

	Generic_Achievement_Tier4Unit.Get_AchievementStatus = function( _self )
		
		for i = 1, g_PlayerCount do
			
			if (GetRelicUnit(i) ~= nil) then

				return eACHIEVEMENT_STATUS_COMPLETE, g_AllPlayers[i]

			end

		end

		return eACHIEVEMENT_STATUS_ONGOING

	end

	Generic_Achievement_Tier4Unit.EndSuccess = function( _self, _PlayerStruct )

		_PlayerStruct.CurrentAddResources.RT_Requisition = _PlayerStruct.CurrentAddResources.RT_Requisition + 75
		_PlayerStruct.CurrentAddResources.RT_Power = _PlayerStruct.CurrentAddResources.RT_Power + 100

	end
	
	Generic_Achievement_KillLeaders.Get_AchievementStatus = function( _self )
		
		for i = 1, g_PlayerCount do
			
			if (g_AllPlayers[i].StatsManager.LeadersKilled >= 5) then

				return eACHIEVEMENT_STATUS_COMPLETE, g_AllPlayers[i]

			end

		end

		return eACHIEVEMENT_STATUS_ONGOING

	end

	Generic_Achievement_KillLeaders.EndSuccess = function( _self, _PlayerStruct )

		_PlayerStruct.CurrentAddResources.RT_Requisition = _PlayerStruct.CurrentAddResources.RT_Requisition + 50

	end

	Generic_Achievement_QuickKills.Get_AchievementStatus = function( _self )
		
		for i = 1, g_PlayerCount do
			
			if (table.getn(g_AllPlayers[i].StatsManager:GetUnitKillsSinceTime(6)) >= 8) then

				return eACHIEVEMENT_STATUS_COMPLETE, g_AllPlayers[i]

			end

		end

		return eACHIEVEMENT_STATUS_ONGOING

	end

	Generic_Achievement_QuickKills.EndSuccess = function( _self, _PlayerStruct )

		_PlayerStruct.CurrentAddResources.RT_Red = _PlayerStruct.CurrentAddResources.RT_Red + 30

	end

	Generic_Achievement_QuickKills2.Get_AchievementStatus = function( _self )
		
		for i = 1, g_PlayerCount do
			
			if (table.getn(g_AllPlayers[i].StatsManager:GetUnitKillsSinceTime(6)) >= 15) then

				return eACHIEVEMENT_STATUS_COMPLETE, g_AllPlayers[i]

			end

		end

		return eACHIEVEMENT_STATUS_ONGOING

	end

	Generic_Achievement_QuickKills2.EndSuccess = function( _self, _PlayerStruct )

		_PlayerStruct.CurrentAddResources.RT_Red = _PlayerStruct.CurrentAddResources.RT_Red + 50

	end
]]
	Log(eLOG_TYPE_INFO, eLOG_SIMPLE, "Finished: 'Setup_Achievements'!")

	RemoveStacktrace()

end


function CreateAchievement(_ViewState, _ObjectiveTable)

	AddStacktrace("CreateAchievement")
	
	local AchievementStruct = AchievementDetails:new(_ViewState, _ObjectiveTable)

	table.insert(g_AllTrackedAchievements, AchievementStruct)

	RemoveStacktrace()

	return AchievementStruct

end

function Update_Achievements()
	
	AddStacktrace("Update_Achievements")
	
	for i = 1, table.getn(g_AllTrackedAchievements) do

		g_AllTrackedAchievements[i]:Update()

	end

	RemoveStacktrace()

end
