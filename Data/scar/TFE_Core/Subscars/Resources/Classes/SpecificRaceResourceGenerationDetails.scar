SpecificRaceResourceGenerationDetails = {}
function SpecificRaceResourceGenerationDetails:new (_RaceName, _HasPassiveResGen, _ResourceGeneration)
	
	AddStacktrace("SpecificRaceResourceGenerationDetails:new")

	Log(eLOG_TYPE_INFO, eLOG_FULL, debug_PassiveResourceGeneration_Settings_FileName, "SpecificRaceResourceGenerationDetails:Constructor",  "Importing race: '".._RaceName.."'...")
	
    local o = 
    {

    	HasPassiveResGen = _HasPassiveResGen,
		RaceGlobals = ResourceGlobalNames[_RaceName],
		MaxNumberOfGlobals = ResourceGroup:new(),
		ResourceGeneration = _ResourceGeneration,		
		BaseMatureLimits = ResourceGroup:new(0, 2.5),
		
		HasSouls = false,
		DE_SoulsThresholdsTable = nil,
		DE_CurrentlyAppliedSoulsModifier = nil

    }
	
	self.__index = self
	
	Log(eLOG_TYPE_INFO, eLOG_FULL, debug_PassiveResourceGeneration_Settings_FileName, "SpecificRaceResourceGenerationDetails:Constructor",  "Importing race: '".._RaceName.."' Success!")
	
	RemoveStacktrace()

    return setmetatable(o, self)

end
