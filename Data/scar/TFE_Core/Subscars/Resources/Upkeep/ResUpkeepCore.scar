debug_ResUpkeepCore_FileName = "ResUpkeepCore"


function Setup_UpkeepSystem()
	local debugFuncName = "ActivateUpkeepSystem"
		
	Log(0, 0, debug_ResUpkeepCore_FileName, debugFuncName, "Starting: '"..debugFuncName.."'...")
	
	EventCue_DoEvent( 'warning', 'music/stinger_completeobjective', 'Army Upkeep Activated!', 'Your army will now drain resources.' )
	
	Log(0, 0, debug_ResUpkeepCore_FileName, debugFuncName, "Finished: '"..debugFuncName.."'!")

end


function Get_PlayerUpkeep()
	local debugFuncName = "Get_PlayerUpkeep"
	
	--g_AllPlayers[j].CurrentAddResources.RT_Requisition =  g_AllPlayers[j].CurrentAddResources.RT_Requisition + CapTimeAsBonusReq
	
	
	for i = 1, g_PlayerCount do
	
		for j = 1, g_PlayerSquadCount[i]+1 do
		
			local tmpStruct = g_AllSquadsData[i][j]		
				
			if(tmpStruct == nil) then
					
				LogOnce(1, 0, debug_ResUpkeepCore_FileName, debugFuncName,  "Struct for Player: "..i.." at position "..j.." is Nil!")				
				
			elseif(tmpStruct.SquadUniqueID == nil) then
				
				LogOnce(1, 0, debug_ResUpkeepCore_FileName, debugFuncName, "Struct: '"..tmpStruct.."' does not have a Unique ID!")		
				
			else		
				local SquadLifetimeAsPercent = 1
				local SquadLifetime = GetWorldLifetime(tmpStruct.SquadInitTime)
			
				if(SquadLifetime < g_TimeTakenForMaxUpkeep) then			
					SquadLifetimeAsPercent = SquadLifetime / g_MatureMaxLifetime
				end
				
				if(UnitCosting[tmpStruct.SquadUnitRace] ~= nil) then
					if(UnitCosting[tmpStruct.SquadUnitRace][tmpStruct.SquadBlueprint] ~= nil) then
					
						local UpkeepReq = (UnitCosting[tmpStruct.SquadUnitRace][tmpStruct.SquadBlueprint].CostEntity.Req * tmpStruct.SquadLoadout) / SquadLifetimeAsPercent
						local UpkeepPower = (UnitCosting[tmpStruct.SquadUnitRace][tmpStruct.SquadBlueprint].CostEntity.Power * tmpStruct.SquadLoadout) / SquadLifetimeAsPercent
						local UpkeepPop = (UnitCosting[tmpStruct.SquadUnitRace][tmpStruct.SquadBlueprint].CostEntity.Pop * tmpStruct.SquadLoadout) / SquadLifetimeAsPercent
						local UpkeepSouls = (UnitCosting[tmpStruct.SquadUnitRace][tmpStruct.SquadBlueprint].CostEntity.Souls * tmpStruct.SquadLoadout) / SquadLifetimeAsPercent
						local UpkeepFaith = (UnitCosting[tmpStruct.SquadUnitRace][tmpStruct.SquadBlueprint].CostEntity.Faith * tmpStruct.SquadLoadout) / SquadLifetimeAsPercent
			
		
						if (tmpStruct.SquadHasLeader) then 
							if(UnitCosting[tmpStruct.SquadUnitRace][tmpStruct.SquadBlueprint].CostLeader ~= nil) then
							
								UpkeepReq = UpkeepReq + (UnitCosting[tmpStruct.SquadUnitRace][tmpStruct.SquadBlueprint].CostLeader.Req / SquadLifetimeAsPercent)
								UpkeepPower = UpkeepPower + (UnitCosting[tmpStruct.SquadUnitRace][tmpStruct.SquadBlueprint].CostLeader.Power / SquadLifetimeAsPercent)
								UpkeepPop = UpkeepPop + (UnitCosting[tmpStruct.SquadUnitRace][tmpStruct.SquadBlueprint].CostLeader.Pop / SquadLifetimeAsPercent)
								UpkeepSouls = UpkeepSouls + g_BonusIncome[i].Souls + (UnitCosting[tmpStruct.SquadUnitRace][tmpStruct.SquadBlueprint].CostLeader.Souls / SquadLifetimeAsPercent)
								UpkeepFaith = UpkeepFaith + (UnitCosting[tmpStruct.SquadUnitRace][tmpStruct.SquadBlueprint].CostLeader.Faith / SquadLifetimeAsPercent)
							
							elseif(g_DebugMode) then
														
								LogOnce(2, 0, debug_ResUpkeepCore_FileName, debugFuncName, "SquadBP '"..tmpStruct.SquadBlueprint.."' does not have LEADER Upkeep data!")								
							
							end
						end
						
						g_AllPlayers[j].CurrentAddResources.RT_Requisition =  g_AllPlayers[j].CurrentAddResources.RT_Requisition + UpkeepReq
						g_AllPlayers[j].CurrentAddResources.RT_Power =  g_AllPlayers[j].CurrentAddResources.RT_Requisition + UpkeepPower
						g_AllPlayers[j].CurrentAddResources.RT_Pop =  g_AllPlayers[j].CurrentAddResources.RT_Requisition + UpkeepPop
						g_AllPlayers[j].CurrentAddResources.RT_Souls =  g_AllPlayers[j].CurrentAddResources.RT_Requisition + UpkeepSouls
						g_AllPlayers[j].CurrentAddResources.RT_Faith =  g_AllPlayers[j].CurrentAddResources.RT_Requisition + UpkeepFaith
						
					else

						LogOnce(1, 0, debug_ResUpkeepCore_FileName, debugFuncName, "SquadBP for ID: '"..tmpStruct.SquadUniqueID.."' does not have a Blueprint!")

					end
				else
						
					LogOnce(2, 0, debug_ResUpkeepCore_FileName, debugFuncName, "Race '"..tmpStruct.SquadUnitRace.."' does not have Upkeep data!")
					
				end	
			end
		end			
	end
end

