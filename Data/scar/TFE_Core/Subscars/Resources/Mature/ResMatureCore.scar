debug_ResMatureCore_FileName = "ResMatureCore"

function Setup_MatureSystem()
	local debugFuncName = "Setup_MatureSystem"
	
	Log(0, 0, debug_ResMatureCore_FileName, debugFuncName, "Starting: '"..debugFuncName.."'...")

	EventCue_DoEvent( 'warning', 'music/stinger_completeobjective', 'Resource Mature Activated!', 'Capped points will increase in value until decapped.' )
	
	Log(0, 0, debug_ResMatureCore_FileName, debugFuncName, "Finished: '"..debugFuncName.."'!")

end

local function Get_StrategicPointsStatus()

	for i = 1, g_NumberStratPoints do
		local CurrentStratPoint = g_AllStrategicPointsStructs[i]
		--[[Firstly check if control has switched.]]
		
		if(not World_OwnsEntity(g_AllStrategicPointsStructs[i].ID)) then
		
			local tmpOwner = Entity_GetPlayerOwner(g_AllStrategicPointsStructs[i].ID)
			
			if(g_AllStrategicPointsStructs[i].OwnedBy ~= World_GetPlayerIndex(tmpOwner)) then
				g_AllStrategicPointsStructs[i].InitTime = g_WorldTime	
				g_AllStrategicPointsStructs[i].OwnedBy = World_GetPlayerIndex(tmpOwner)	
			end
			
			local OwnedTime = GetWorldLifetime(g_AllStrategicPointsStructs[i].InitTime)
			if(OwnedTime < g_MatureMaxLifetime) then
				g_AllStrategicPointsStructs[i].InitTime = OwnedTime + g_MatureUpdateRate
			end

			if(OwnedTime > g_MatureMaxLifetime) then
				g_AllStrategicPointsStructs[i].InitTime = g_MatureMaxLifetime

			end
		end

	end
end

function Set_ResourceMature()

	Get_StrategicPointsStatus()

	for j = 1, table.getn(g_AllPlayers) do

		for z = 1, g_NumberStratPoints do
			if(g_AllStrategicPointsStructs[z].OwnedPlayer == g_AllPlayers[j].PlayerIndex) then

				local MaxBonusReq = g_AllPlayers[j].RaceDetails.RaceResourceInfo.BaseMatureLimits.RT_Requisition[g_AllPlayers[j].CurrentNumberOfResearchedGlobals]
				-----Not implemented yet
				local MaxBonusPower = g_AllPlayers[j].RaceDetails.RaceResourceInfo.BaseMatureLimits.RT_Power[g_AllPlayers[j].CurrentNumberOfResearchedGlobals]
				local MaxBonusPop = g_AllPlayers[j].RaceDetails.RaceResourceInfo.BaseMatureLimits.RT_Pop[g_AllPlayers[j].CurrentNumberOfResearchedGlobals]
				local MaxBonusSouls = g_AllPlayers[j].RaceDetails.RaceResourceInfo.BaseMatureLimits.RT_Souls[g_AllPlayers[j].CurrentNumberOfResearchedGlobals]
				local MaxBonusFaith = g_AllPlayers[j].RaceDetails.RaceResourceInfo.BaseMatureLimits.RT_Faith[g_AllPlayers[j].CurrentNumberOfResearchedGlobals]
				-----
				
				local CapTimeAsMaturePercent = GetWorldLifetime(g_AllStrategicPointsStructs[z].InitTime) / g_MatureMaxLifetime
				local CapTimeAsBonusReq = MaxBonusReq * CapTimeAsMaturePercent

				if(CapTimeAsBonusReq > MaxBonusReq) then
		
					CapTimeAsBonusReq = MaxBonusReq						

				end

				g_AllPlayers[j].CurrentAddResources.RT_Requisition =  g_AllPlayers[j].CurrentAddResources.RT_Requisition + CapTimeAsBonusReq
				--print("CapTime = "..CapTimeAsMaturePercent.." And New Req from it = "..CapTimeAsBonusReq.." Capped at = "..MaxBonusReq.Req)
			end
		end
	end	
end
