debug_PassiveResourceGeneration_Core_FileName = "PassiveResourceGeneration_Core"

import("TFE_Core/Subscars/Resources/AutoGenResources/PassiveResourceGeneration_Settings.lua")

function Setup_PassiveResourceGeneration()
	local debugFuncName = "Setup_PassiveResourceGeneration"

	Log(0, 0, debug_PassiveResourceGeneration_Core_FileName, debugFuncName, "Starting: '"..debugFuncName.."'...")
	
	if pcall(PassiveResourceGeneration_Import_Settings) then
	
		Rule_AddInterval(Set_PassiveResources, g_ResourceGenUpdateRate)	
		
		Log(0, 0, debug_PassiveResourceGeneration_Core_FileName, debugFuncName, "Finished: '"..debugFuncName.."'!")
		
	else 
	
		Log(2, 1, debug_PassiveResourceGeneration_Core_FileName, debugFuncName, "Cannot run function 'PassiveResourceGeneration_Import_Settings'!")
		Log(2, 0, debug_PassiveResourceGeneration_Core_FileName, debugFuncName, "Finished: '"..debugFuncName.."' with error!")
		
	end
	
end


function Set_PassiveResources()

	local AddResources = function()
			
		for i = 1, g_PlayerCount do
		
			local RaceResStruct = g_FactionSpecificResourceGeneration[g_AllPlayers[i].RaceIndex+1] 
			
			if (Player_IsAlive(g_AllPlayers[i].Player) == true and RaceResStruct ~= nil) then
			
				if(RaceResStruct.HasPassiveResGen) then
					TableMergeValues_UsingKey(g_AllPlayers[i].Player.CurrentAddResources, RaceResStruct, {RT_Requisition, RT_Power, RT_Pop, RT_Souls, RT_Faith})
					--[[.RT_Requisition =  g_AllPlayers[i].Player.CurrentAddResources.RT_Requisition + .RT_Requisition
					Player_AddResource(g_AllPlayers[i].Player, RT_Power, RaceResStruct.RT_Power)
					Player_AddResource(g_AllPlayers[i].Player, RT_Pop, RaceResStruct.RT_Pop)
					Player_AddResource(g_AllPlayers[i].Player, RT_Souls, RaceResStruct.RT_Souls)
					Player_AddResource(g_AllPlayers[i].Player, RT_Faith, RaceResStruct.RT_Faith)]]
					
				end
			end
		
		end
		
	end
	
	if pcall(AddResources) == false then
		Log(2, 0, debug_PassiveResourceGeneration_Core_FileName, "Set_PassiveResources", "Cannot add passive resources!")
	end
end