----------------------------------------
-- File: 'eldarbuildbasestrategy.ai'
-- Edited by Thudmeizer @ 02.10.2008

class 'EldarBuildBaseStrategy' (BuildBaseStrategy)

function EldarBuildBaseStrategy:__init( baseinfo ) super( baseinfo )

	-- Add build items that can cause an "invalid addon" console message
	CpuPrerequisites2.AddSpecialItem("eldar_wargear_upgrade_lvl_1_ghosthelm_addon", CpuPrerequisites.BT_AddOn)
	CpuPrerequisites2.AddSpecialItem("eldar_wargear_upgrade_lvl_1_rune_witnessing_addon", CpuPrerequisites.BT_AddOn)

	-- Add detector units (Best first, worst last)
	self:AddDetectorUnit("eldar_squad_rangers")
	self:AddDetectorUnit("eldar_squad_farseer")
	self:AddDetectorUnit("eldar_harlequin_squad")
	self:AddDetectorUnit("eldar_squad_avatar")
	
	self.heroeWargear = {}

	--Heroe Wargear
	-- Name, Req, Power
	table.insert(self.heroeWargear, {"eldar_wargear_upgrade_lvl_1_ghosthelm_addon",80,60})
	table.insert(self.heroeWargear, {"eldar_wargear_upgrade_lvl_1_rune_witnessing_addon",80,60})
	table.insert(self.heroeWargear, {"eldar_wargear_upgrade_lvl_2_gauntlets_addon",100,60})
	table.insert(self.heroeWargear, {"eldar_wargear_upgrade_lvl_2_rune_focus_addon",100,80})
	table.insert(self.heroeWargear, {"eldar_wargear_upgrade_lvl_3_rune_aura_addon",150,180})
	table.insert(self.heroeWargear, {"eldar_wargear_upgrade_lvl_3_wraithbone_armor_addon",120,140})
	
	self.HeroSquadName = "eldar_squad_farseer"
	
	local heroeDelayLimit = 10 --% of waiting for the upgrade
	local heroeDelay = math.random (1,100)
	local heroeWargearCostFactor = 1.5
	aipushtrace ("BuildBaseStrategy:Heroe Wargear Election")
	
	--choose Upgrades
	self.heroeWargearPattern1 = math.random(1,2)
	self.heroeWargearPattern2 = math.random(3,4)
	self.heroeWargearPattern3 = math.random(5,6)
	
	aitrace ("Heroe Wargear T1: "..self.heroeWargear[self.heroeWargearPattern1][HeroeWargearNameIndex])
	aitrace ("Heroe Wargear T2: "..self.heroeWargear[self.heroeWargearPattern2][HeroeWargearNameIndex])
	aitrace ("Heroe Wargear T3: "..self.heroeWargear[self.heroeWargearPattern3][HeroeWargearNameIndex])
	
	if heroeDelay <= heroeDelayLimit then
		aipoptrace ("Heroe Wargear Delayed")
		for i= 1, table.getn(self.heroeWargear) do
			self.heroeWargear[i][HeroeWargearReqIndex]=self.heroeWargear[i][HeroeWargearReqIndex]*heroeWargearCostFactor
			self.heroeWargear[i][HeroeWargearPowIndex]=self.heroeWargear[i][HeroeWargearPowIndex]*heroeWargearCostFactor
		end
	else
		aipoptrace ("Heroe Wargear Not Delayed")
	end
	
end

function EldarBuildBaseStrategy:ChooseBuildProgram()

	-- We have a 25% chance for a banshee rush
	if (math.random(1, 4) == 1) then
		return 3	-- Banshee rush
	end
		
	-- Modify probabilities according to the closest enemy player
	local oEnemy = cpu_manager:FindClosestEnemyPlayer(false)
	local sEnemy = oEnemy:GetPlayerRaceName()		
	if (sEnemy == "ork_race" or sEnemy == "guard_race") then
		return 2	-- Warp spider rush
	end
	return 1	-- Dark reaper rush
end

function EldarBuildBaseStrategy:EvaluateSquadCap()

	-- Check if any webway gates are in production
	local iBuildingID = cpu_manager.stats:GetBuildingID("eldar_webway_gate")
	if (self:PlanExists("Build Building Plan", iBuildingID)) then
		return
	end

	-- Check squad and support cap
	if self:CheckSquadCap(150, 75) then
	
		-- Start addon
		local tBuildType = CpuBuildType()
		tBuildType.name = "eldar_aspect_stone_webway_inf_pop"
		tBuildType.btype = CpuPrerequisites.BT_AddOn
		if (self:TryBuild( tBuildType )) then
			aitrace("BuildController: Dynamic build of addon "..tBuildType.name)
		end
		return
	end
	
	if self:CheckSupportCap(150, 75) then
		
		-- Start addon
		local tBuildType = CpuBuildType()
		tBuildType.name = "eldar_aspect_stone_webway_veh_pop"
		tBuildType.btype = CpuPrerequisites.BT_AddOn
		if (self:TryBuild( tBuildType )) then
			aitrace("BuildController: Dynamic build of addon "..tBuildType.name)
		end
		return
	end
end

function EldarBuildBaseStrategy:GetBuildingName( sType )

	-- Return race specific object string
	if (sType == "HQ") then
		return "eldar_hq"
		
	elseif (sType == "Generator") then
		return "eldar_warp_generator"
		
	elseif (sType == "BiggerGenerator") then
		return "eldar_advanced_warp_generator"
		
	elseif (sType == "VehicleBuilding") then
		return "eldar_support_portal"
		
	elseif (sType == "ListeningPost") then
		return "eldar_listening_post"
		
	elseif (sType == "Turret") then
		return "eldar_support_platform_scatterlaser"
		
	elseif (sType == "Mine") then
		return "eldar_mine_field"
	end
	
	return nil
end

function EldarBuildBaseStrategy:GetAddonBuilding( sType )

	if (sType == "eldar_support_platform_addon") then
		return "eldar_support_platform_scatterlaser"
		
	elseif (sType == "eldar_list_post_addon_1") then
		return "eldar_listening_post"
		
	elseif (sType == "eldar_list_post_addon_2") then
		return "eldar_listening_post"

	elseif (sType == "eldar_aspect_stone_webway_inf_pop") then
		return "eldar_webway_gate"

	elseif (sType == "eldar_aspect_stone_webway_veh_pop") then
		return "eldar_webway_gate"

	elseif (sType == "eldar_aspect_stone_banshees") then
		return "eldar_aspect_portal"
		
	elseif (sType == "eldar_aspect_stone_dark_reapers") then
		return "eldar_aspect_portal"
		
	elseif (sType == "eldar_aspect_stone_fire_dragon") then
		return "eldar_aspect_portal"
		
	elseif (sType == "eldar_aspect_stone_warp_spider") then
		return "eldar_aspect_portal"
		
	elseif (sType == "eldar_aspect_stone_falcon") then
		return "eldar_support_portal"
		
	elseif (sType == "eldar_aspect_stone_wraithlord") then
		return "eldar_support_portal"
		
	elseif (sType == "eldar_aspect_stone_prism") then
		return "eldar_support_portal"
	end

	for i = 1, table.getn(self.heroeWargear) do
		if (sType == self.heroeWargear[i][HeroeWargearNameIndex]) then
			return "eldar_hq"
		end
	end
	
	return nil
end

function EldarBuildBaseStrategy:UpdateTierLevel() 

	-- Reset tier level
	self.tierLevel = 1
	
   -- Check if we own enough webways/support portals/shrines	
   if (cpu_manager.cpu_player:IsResearchComplete("eldar_annihilate_the_enemy")) then
	  self.tierLevel = 3
   elseif (cpu_manager.cpu_player:IsResearchComplete("eldar_tier2_research")) then
	  self.tierLevel = 2
   end
end

-- Arkhan 11.2005: Returns the squad cap and support cap of the given squad
function EldarBuildBaseStrategy:GetUnitStats(sSquadName)

	if (sSquadName == "eldar_guardian_squad") then
		return 2, 0
	elseif (sSquadName == "eldar_squad_rangers") then
		return 1, 0
	elseif (sSquadName == "eldar_squad_banshees") then
		return 3, 0
	elseif (sSquadName == "eldar_squad_dark_reapers") then
		return 3, 0
	elseif (sSquadName == "eldar_harlequin_squad") then
		return 0, 0
	elseif (sSquadName == "eldar_squad_seer_council") then
		return 0, 0
	elseif (sSquadName == "eldar_squad_fire_dragon") then
		return 3, 0
	elseif (sSquadName == "eldar_squad_warp_spider") then
		return 3, 0
	elseif (sSquadName == "eldar_squad_grav_platform") then
		return 0, 1
	elseif (sSquadName == "eldar_squad_grav_platform_brightlance") then
		return 0, 1
	elseif (sSquadName == "eldar_squad_falcon_grav_tank") then
		return 0, 3
	elseif (sSquadName == "eldar_squad_vypers") then
		return 0, 1
	elseif (sSquadName == "eldar_squad_wraithlord") then
		return 0, 2
	elseif (sSquadName == "eldar_squad_fire_prism") then
		return 0, 4
	elseif (sSquadName == "eldar_squad_avatar") then
		return 0, 0
	end
	return 0, 0
end

function EldarBuildBaseStrategy:BuildFlexible()

	-- Dynamic research
	-- Item-Syntax: ResearchName, MinTier, RequisitionCost, PowerCost, MinSquadCap, MinSupportCap, SquadName, SquadMinCount

	-- Compute tier 1 researches
	if (self.tierLevel >= 1 and self.m_iArmyStrength >= 1000) then
	
		-- Infantry upgrades
		self:DynamicResearch("eldar_research_infantryhealth_1", 1, 120,	80, 6, 0, nil, 0)
		self:DynamicResearch("eldar_research_infantryaccuracy_1", 1, 100, 60, 6, 0, nil, 0)
		self:DynamicResearch("eldar_exarch_ability_research_1", 1, 80, 60, 8, 0, "eldar_squad_dark_reapers", 2)	-- Fastshot
		self:DynamicResearch("eldar_exarch_ability_research", 1, 80, 60, 8, 0, "eldar_squad_banshees", 2)		-- Warshout
	end
	
	-- Compute tier 2 researches
	if (self.tierLevel >= 2 and self.m_iArmyStrength >= 1500) then
	
		-- Infantry upgrades
		self:DynamicResearch("eldar_research_infantryhealth_2", 2, 150,	100, 8, 0, nil, 0)
		self:DynamicResearch("eldar_research_infantryaccuracy_2", 2, 120, 80, 8, 0, nil, 0)
		--self:DynamicResearch("eldar_haywire_bomb_research", 2, 80, 60, 8, 2, "eldar_squad_fire_dragon", 2)	-- Haywire bombs
		self:DynamicResearch("eldar_chosen_of_jain_zar", 2, 80, 60, 8, 2, "eldar_squad_banshees", 2)			-- Dance of the elders
		
		-- Guardian upgrades
		if (self:CountSquads("eldar_guardian_squad") >= 2) then
			self:DynamicResearch("eldar_heavy_guardian_research", 1, 80, 60, 6, 0, nil, 0)						-- Heavy guardians
			self:DynamicResearch("eldar_warlock_ability_research", 2, 80, 60, 6, 0, nil, 0)						-- Conceal
		end
		
		-- Leader upgrades
		self:DynamicResearch("eldar_research_farseerhealth_1", 2, 80, 60, 8, 2, nil, 0)
		self:DynamicResearch("eldar_wargear_upgrade_01_witchblade_research_mp", 2, 100, 60, 8, 2, nil, 0)
		--self:DynamicResearch("eldar_wargear_upgrade_03_shuriken_pistol_research_mp", 2, 60, 40, 8, 0, self.HeroSquadName, 1)
	end

	-- Compute tier 3 researches
	if (self.tierLevel >= 3 and self.m_iArmyStrength >= 2000) then
	
		-- Vehicle upgrades
		self:DynamicResearch("eldar_vehicle_ability_research", 3, 150, 100, 6, 6, nil, 0)
	
		-- Infantry upgrades
		self:DynamicResearch("eldar_warlock_ability_research_4", 3, 150, 100, 6, 6, "eldar_squad_seer_council", 1)		-- Mysticism
		self:DynamicResearch("eldar_exarch_ability_research_firedragon", 3, 80, 60, 6, 6, "eldar_squad_fire_dragon", 2)	-- Dragon Scale
		self:DynamicResearch("eldar_ranger_marksman_research", 3, 80, 60, 6, 6, "eldar_squad_rangers", 2)				-- Ranger marksmanship
		
		-- Leader upgrades
		self:DynamicResearch("eldar_research_farseerhealth_2", 3, 100, 80, 6, 6, nil, 0)
		self:DynamicResearch("eldar_wargear_upgrade_02_singing_spear_research_mp", 3, 120, 80, 6, 6, nil,0)
		--self:DynamicResearch("eldar_wargear_upgrade_04_twin_shuriken_pistol_research_mp", 3, 80, 60, 10, 4, self.HeroSquadName, 1)
	end
	
	-- DynamicAddon(sAddonName, iAddonCount, iMinTier, iRequisitionCost, iPowerCost, iMinSquadCap, iMinSupportCap, sSquadName, iSquadMinCount)
	if (self:CountSquads("eldar_squad_farseer") > 0 and self.m_iArmyStrength >= 1000 + self.tierLevel * 250) then
	
		-- Hero wargear
		self:DynamicAddon(self.heroeWargear[self.heroeWargearPattern1][HeroeWargearNameIndex], 1, 1,self.heroeWargear[self.heroeWargearPattern1][HeroeWargearReqIndex], self.heroeWargear[self.heroeWargearPattern1][HeroeWargearPowIndex],6, 0, self.HeroSquadName, 0)
		self:DynamicAddon(self.heroeWargear[self.heroeWargearPattern2][HeroeWargearNameIndex], 1, 2,self.heroeWargear[self.heroeWargearPattern2][HeroeWargearReqIndex], self.heroeWargear[self.heroeWargearPattern2][HeroeWargearPowIndex],12, 0, self.HeroSquadName, 0)
		self:DynamicAddon(self.heroeWargear[self.heroeWargearPattern3][HeroeWargearNameIndex], 1, 3,self.heroeWargear[self.heroeWargearPattern3][HeroeWargearReqIndex], self.heroeWargear[self.heroeWargearPattern3][HeroeWargearPowIndex],16, 4, self.HeroSquadName, 0)
		for i= 1, table.getn(self.heroeWargear) do
			self:DynamicAddon(self.heroeWargear[i][HeroeWargearNameIndex], 1, 2,self.heroeWargear[i][HeroeWargearReqIndex], self.heroeWargear[i][HeroeWargearPowIndex],10, 0,self.HeroSquadName, 0)
		end
	end
	
	-- Restrict dynamic builds to hard difficulty or higher
	if (CpuManager.AISettings.bMultiBuildings) then
	
		-- Item-Syntax: BuildingName, BuildingCount, MinTier, MinRequisition, MinPower, MinSquadCap, MinSupportCap
		if self:GetBuildingCountByName("eldar_hq") > 1 then
			self:DynamicBuild("eldar_aspect_portal", 2, 2, 800, 200, 6, 2)
			self:DynamicBuild("eldar_support_portal", 2, 2, 200, 800, 6, 2)			
		end
	end
end

-- Arkhan 01.2006: Method to check if force tech should be computed
function EldarBuildBaseStrategy:ForceTech()

	-- Check time
	if (g_iGMT < 60 * CpuManager.ForceTech.StartTier1) then
		return false
	end
	
  	-- Check ressources
	local iRequisition = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition )
	local iPower = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Power )
	
	-- Check tier
	local iTierLevel = self:GetTierLevel()
	if (iTierLevel == 1) then
	
		-- Check resources
		if (iRequisition > 600 and iPower > 300) then
			return false
		end
		
		-- Check for tier2 research
	    if cpu_manager.cpu_player:IsResearchComplete("eldar_tier2_research") then
		   return false
		end
		return true
		
	elseif (iTierLevel == 2) then

		-- Check for support portal
		if (self:GetBuildingCountByName("eldar_support_portal", false) < 1) then
			return true
		end
		
		-- Check time
		if (g_iGMT > 60 * CpuManager.ForceTech.StartTier2 and (iRequisition < 600 or iPower < 600)) then
			return true
		end
		
	end
	return false
end

-- Arkhan 03.2006: Return placement type for buildings
function EldarBuildBaseStrategy:GetPlacementType(iBuildingID)
	
	-- Check building
	if (cpu_manager:IsHQ(iBuildingID)) then
		if (self:GetBuildingCountByName("eldar_hq") < 1) then
			return "HQ"
		else
			return "Safeplace"
		end
	elseif (iBuildingID == cpu_manager.stats:GetBuildingID("eldar_aspect_portal") or
			iBuildingID == cpu_manager.stats:GetBuildingID("eldar_support_portal")) then
		return "Military"
	elseif (iBuildingID == cpu_manager.stats:GetBuildingID("eldar_webway_gate")) then
		return "Front1"	
	elseif (cpu_manager:IsTurret(iBuildingID)) then
		return "Front2"
	elseif (cpu_manager:IsMine(iBuildingID)) then
		return "Mine"
	elseif (cpu_manager:IsGenerator(iBuildingID) or
			iBuildingID == cpu_manager.stats:GetBuildingID("eldar_soul_shrine")) then
		return "BaseBack"
	end
	return "Basic"
end

-- Arkhan 11.2006: Virtual method for checking out relic units
function EldarBuildBaseStrategy:RelicRequired(sName)

	-- Check name
	if (sName == "eldar_squad_avatar") then
		return true
	elseif (sName == "eldar_squad_seer_council") then
		return true
	elseif (sName == "eldar_wargear_upgrade_lvl_1_ghosthelm_addon") then
		return true
	elseif (sName == "eldar_wargear_upgrade_lvl_1_rune_witnessing_addon") then
		return true
	elseif (sName == "eldar_wargear_upgrade_lvl_2_gauntlets_addon") then
		return true
	elseif (sName == "eldar_wargear_upgrade_lvl_2_rune_focus_addon") then
		return true
	elseif (sName == "eldar_wargear_upgrade_lvl_3_rune_aura_addon") then
		return true
	elseif (sName == "eldar_wargear_upgrade_lvl_3_wraithbone_armor_addon") then
		return true
	elseif (sName == "eldar_wargear_upgrade_01_witchblade_research_mp") then
		return true
	elseif (sName == "eldar_wargear_upgrade_02_singing_spear_research_mp") then
		return true
	end
	return false
end
