----------------------------------------
-- File: 'guardsquadtactic.ai'
-- Edited by Thudmeizer @ 16.09.2008

class 'GuardSquadTactic' (GuardInfantryTactic)

GuardSquad = {}

function GuardSquadTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Guard Squad Tactic")
	
	-- Squad is able to occupy bunkers
	self.m_bBunkerSquad = true
	
	-- Set upgrade type
	self.bLongRange = (math.random(1, 3) ~= 1)
end

function GuardSquadTactic:InitAbilities()

	-- Init ability ID's
	if (GuardSquad.iFiringLineID == nil) then
		GuardSquad.iFiringLineID = cpu_manager.stats:GetAbilityID( "guard_sergeant_double_time" )	
	end
end

function GuardSquadTactic:DoAbilities()

	-- Check if I should enable/disable fire line
	self:DoAbilityFireLine()
	
	-- Compute common abilities
	GuardInfantryTactic.DoAbilities(self)
end

function GuardSquadTactic:DoAbilityFireLine()

	-- Check if we can use fire line ability
	if (not self.squad_ai:CanDoAbility(GuardSquad.iFiringLineID)) then
		return
	end

    -- Check whether we're using the ability
    local bIsUsing = self.squad_ai:IsUsingAbility(GuardSquad.iFiringLineID)

    -- Check if we're shooting
    local bShooting = self.squad_ai:IsAttacking()

    -- Check if we're in retreat state
    local bRunAWay = (self.squad_ai:IsBroken() or self.stateID ~= Tactic.StateID.NoState or self.state == Tactic.States.Retreat)

    -- Check if we're doing any sort of moving
    local bMoving = (self:IsMoving() or self.squad_ai:IsCapturing() or self.squad_ai:IsInStateMove())
	
	-- Check if we are in melee combat
	local bMelee = (self.squad_ai:IsUnderAttack() and cpu_manager.cpu_player:FindFirstEnemy(self.squad_ai:GetPosition(), 10, 1) ~= nil)

    -- Check if fire line ability should be toggled
	local bUseFireLine = (bShooting and not bMelee and not bRunAWay and not bMoving)
    if ((bIsUsing and not bUseFireLine) or (not bIsUsing and bUseFireLine)) then
		
		-- Toggle fire line ability
        self.squad_ai:DoSpecialAbility(GuardSquad.iFiringLineID)
    end
end

function GuardSquadTactic:Upgrade()

	-- Check if we are reinforcing
	if (self.squad_ai:IsReinforcing() or not self.squad_ai:HasUpgradableTrooper() or self.bWaitForThreat) then
		return
	end

	-- If I am broken, don't upgrade!
	if (self:IsAffectedByMorale() and self.squad_ai:IsBroken()) then
		return
	end	
	
	-- Only upgrade in healthy state
	if (self.squad_ai:GetNumTroopers() < self.squad_ai:GetMaxTroopers() * 0.6 or self.squad_ai:GetHealthPercentage() < 0.5 or self.squad_ai:IsUnderAttack()) then
		return
	end
	
	-- Check upgrade type
	if (self.bLongRange) then
	
		-- Upgrade to grenade launcher and plasma rifle
		if (math.random(1, 3) == 1 or cpu_manager:GetTierLevel() < 2) then
		
			-- Upgrade to grenade launcher
			self.squad_ai:DoBestUpgrade(UnitStatsAI.UC_LightInfantryHigh)
		else
			-- Upgrade to plasma rifle
			self.squad_ai:DoBestUpgrade(UnitStatsAI.UC_HeavyInfantryMed)
		end
	else
		-- Upgrade to flamer
		self.squad_ai:DoBestUpgrade(UnitStatsAI.UC_MonsterMed)
	end
end
