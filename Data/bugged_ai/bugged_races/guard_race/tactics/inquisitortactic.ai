----------------------------------------
-- File: 'inquisitortactic.ai'
-- Edited by Thudmeizer @ 10.09.2008

class 'InquisitorTactic' (GuardInfantryTactic)

Inquisitor = {}

function InquisitorTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Inquisitor Tactic")
	
	self.dance_time = 0
end

function InquisitorTactic:IsAttacker()
	return self:IsCommanderAttacker()
end

function InquisitorTactic:IsDefender()
	return self:IsCommanderDefender()
end

function InquisitorTactic:InitAbilities()

	-- Init ability ID's
	if (Inquisitor.enfeeble == nil) then
		Inquisitor.enfeeble = cpu_manager.stats:GetAbilityID( "guard_enfeeble_inquisitor" )
	end

	if (Inquisitor.purge == nil) then
		Inquisitor.purge = cpu_manager.stats:GetAbilityID( "guard_orbital_purge" )
	end

	if (Inquisitor.unbinding == nil) then
		Inquisitor.unbinding = cpu_manager.stats:GetAbilityID( "guard_unbinding_spell_inquisitor" )
	end
end

function InquisitorTactic:DoAbilities()

	-- Try to use enfeeble ability on commanders
	Ability.DoAbilityTarget(self.squad_ai, Inquisitor.enfeeble, Ability.Filters.CloseCommanderEnemy, 1)
	
	-- Try to use unbinding ability on demons
	Ability.DoAbilityTarget(self.squad_ai, Inquisitor.unbinding, Ability.Filters.CloseMonsterEnemy, 1)

	-- Try to use orbital purge ability
	-- If we are dying, lower requisites for attacks
	if (self.squad_ai:WasRecentlyHurt() and self.squad_ai:GetHealthPercentage() < 0.4) then
		Ability.DoAbilityTarget(self.squad_ai, Inquisitor.purge, Ability.Filters.CloseInfiltratedOrVisibleEnemyInfantry, 6)
	else
		Ability.DoAbilityTarget(self.squad_ai, Inquisitor.purge, Ability.Filters.CloseInfiltratedOrVisibleEnemyInfantry, 12)
	end
		
end

function InquisitorTactic:Update()

	if (self:IsComplete()) then
		return
	end
	
	-- State machine
	if (not InfantryTactic.Update( self )) then
		return
	end
		
	local bSetRanged = false
    local bSetMelee = false
	local eStance = self.squad_ai:GetMeleeStance()
	-- Check health
    if (self.squad_ai:GetHealthPercentage() > 0.4) then
        bSetMelee = (eStance == SquadAI.MSTANCE_Ranged)
	else
        bSetRanged = (eStance == SquadAI.MSTANCE_Assault)
    end
	
	if (bSetRanged) then
        self.squad_ai:DoSetMeleeStance( SquadAI.MSTANCE_Ranged )
        self.dance_time = g_iGMT
    elseif (bSetMelee and self.stateID ~= Tactic.StateID.DoDance and g_iGMT > self.dance_time + 10) then
        self.squad_ai:DoSetDefaultMeleeStance()
        self.dance_time = 0
    end

	-- Check if we're busy
	if (self:IsInSubState() or self.squad_ai:IsBroken()) then
		return
	end

	if (self.squad_ai:GetMeleeStance() == SquadAI.MSTANCE_Assault) then			
		if (self.squad_ai:IsInCombat() or self.squad_ai:WasRecentlyHurt()) then		
			if (self:TryAttachSquad(false, true, 50, 150, self.m_fCommanderAttachHealth) == nil) then
				self:TryAttachSquadMelee()
			end
		end
	end
end