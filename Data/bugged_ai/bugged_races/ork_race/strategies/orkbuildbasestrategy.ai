----------------------------------------
-- File: 'orkbuildbasestrategy.ai'
-- Edited by Thudmeizer @ 02.10.2008

class 'OrkBuildBaseStrategy' (BuildBaseStrategy)

function OrkBuildBaseStrategy:__init( baseinfo ) super( baseinfo )

	-- Add build items that can cause an "invalid addon" console message
	CpuPrerequisites2.AddSpecialItem("ork_wargear_upgrade_lvl_1_bm_los_mask", CpuPrerequisites.BT_AddOn)
	CpuPrerequisites2.AddSpecialItem("ork_wargear_upgrade_lvl_1_bm_repair", CpuPrerequisites.BT_AddOn)
	CpuPrerequisites2.AddSpecialItem("ork_wargear_upgrade_lvl_2_fasta_legz_addon", CpuPrerequisites.BT_AddOn)
	CpuPrerequisites2.AddSpecialItem("ork_wargear_upgrade_lvl_2_red_gob_addon", CpuPrerequisites.BT_AddOn)
	CpuPrerequisites2.AddSpecialItem("ork_wargear_upgrade_lvl_3_boss_pole_addon", CpuPrerequisites.BT_AddOn)
	CpuPrerequisites2.AddSpecialItem("ork_wargear_upgrade_lvl_3_mega_eavy_armor_addon", CpuPrerequisites.BT_AddOn)

	-- Add detector units (Best first, worst last)
	self:AddDetectorUnit("ork_squad_mek_boy")
	self:AddDetectorUnit("ork_squad_warboss")
	self:AddDetectorUnit("ork_squad_grot")
	
	self.heroeWargear = {}

	--Heroe Wargear
	-- Name, Req, Power
	table.insert(self.heroeWargear, {"ork_wargear_upgrade_lvl_1_bm_los_mask",80,60})
	table.insert(self.heroeWargear, {"ork_wargear_upgrade_lvl_1_bm_repair",80,60})
	table.insert(self.heroeWargear, {"ork_wargear_upgrade_lvl_2_fasta_legz_addon",100,80})
	table.insert(self.heroeWargear, {"ork_wargear_upgrade_lvl_2_red_gob_addon",100,80})
	table.insert(self.heroeWargear, {"ork_wargear_upgrade_lvl_3_boss_pole_addon",200,150})
	table.insert(self.heroeWargear, {"ork_wargear_upgrade_lvl_3_mega_eavy_armor_addon",180,140})
	
	self.HeroSquadName = "ork_squad_mek_boy"
	
	local heroeDelayLimit = 10 --% of waiting for the upgrade
	local heroeDelay = math.random (1,100)
	local heroeWargearCostFactor = 1.5
	aipushtrace ("BuildBaseStrategy:Heroe Wargear Election")
	
	--choose Upgrades
	self.heroeWargearPattern1 = math.random(1,2)
	self.heroeWargearPattern2 = math.random(3,4)
	self.heroeWargearPattern3 = math.random(5,6)
	
	aitrace ("Heroe Wargear T1: "..self.heroeWargear[self.heroeWargearPattern1][HeroeWargearNameIndex])
	aitrace ("Heroe Wargear T2: "..self.heroeWargear[self.heroeWargearPattern2][HeroeWargearNameIndex])
	aitrace ("Heroe Wargear T3: "..self.heroeWargear[self.heroeWargearPattern3][HeroeWargearNameIndex])
	
	if heroeDelay <= heroeDelayLimit then
		aipoptrace ("Heroe Wargear Delayed")
		for i = 1, table.getn(self.heroeWargear) do
			self.heroeWargear[i][HeroeWargearReqIndex]=self.heroeWargear[i][HeroeWargearReqIndex]*heroeWargearCostFactor
			self.heroeWargear[i][HeroeWargearPowIndex]=self.heroeWargear[i][HeroeWargearPowIndex]*heroeWargearCostFactor
		end
	else
		aipoptrace ("Heroe Wargear Not Delayed")
	end
end

function OrkBuildBaseStrategy:ChooseBuildProgram()

	-- Check build program count
	if (table.getn(self.info.BuildPrograms) ~= 4) then
		return BuildBaseStrategy.ChooseBuildProgram(self)
	end

	-- Get map size and closest enemy distance
	local sMapSize, iClosestEnemyDistance = self:GetMapSize()
		
	-- Set probabilities of the strategies according to the map size
	local iBuildProgram1	-- Basic strategy
	local iBuildProgram2	-- Shoota rush
	local iBuildProgram3	-- Stormboy rush
	local iBuildProgram4	-- Nob rush
	if (sMapSize == "small" or iClosestEnemyDistance <= 70 or cpu_manager.iPlayerCount == 2) then
	
		iBuildProgram1 = 40
		iBuildProgram2 = 30
		iBuildProgram3 = 30
		iBuildProgram4 = 0
		
	elseif (sMapSize == "large") then
	
		iBuildProgram1 = 20
		iBuildProgram2 = 20
		iBuildProgram3 = 60
		iBuildProgram4 = 0
	else
	
		iBuildProgram1 = 40
		iBuildProgram2 = 40
		iBuildProgram3 = 20
		iBuildProgram4 = 0
	end
	
	-- Modify probabilities according to the closest enemy player
	-- local oEnemy = cpu_manager:FindClosestEnemyPlayer(false)
	-- local sEnemy = oEnemy:GetPlayerRaceName()		
	-- if (sEnemy == "ork_race" or sEnemy == chaos_marine_race) then
	-- 
	-- 	iBuildProgram2 = iBuildProgram2 + 10
	-- 	iBuildProgram3 = iBuildProgram3 - 10
	-- 	
	-- elseif (sEnemy == "eldar_race" or sEnemy == "guard_race" or sEnemy == "tau_race" or sEnemy == "necron_race") then
    -- 
	-- 	iBuildProgram1 = iBuildProgram1 - 10
	-- 	iBuildProgram2 = iBuildProgram2 - 10
	-- 	iBuildProgram3 = iBuildProgram3 + 20
	-- end
		
	-- Now choose a program
	iBuildProgram2 = iBuildProgram1 + iBuildProgram2
	iBuildProgram3 = iBuildProgram2 + iBuildProgram3
	iBuildProgram4 = iBuildProgram3 + iBuildProgram4
	local iRandom = math.random(1, 100)
	if (iRandom <= iBuildProgram1) then
		return 1
	elseif (iRandom <= iBuildProgram2) then
		return 2
	elseif (iRandom <= iBuildProgram3) then
		return 3
	elseif (iRandom <= iBuildProgram4) then
		return 4
	end
	return 1
end

function OrkBuildBaseStrategy:EvaluateSquadCap()

	-- Check if any waagh banners are in production
	local iBuildingID = cpu_manager.stats:GetBuildingID("ork_waagh_banner")
	for oBuildChannel in build_manager:GetBuildChannelAIs() do

		-- Check building ID
		if (oBuildChannel:GetBlueprintID() == iBuildingID and not oBuildChannel:ConstructionDone()) then
			return
		end
	end

	-- Check squad and support cap
	if (self:CheckSquadCap(180, 15) or self:CheckSupportCap(180, 15)) then
	
		-- Build a Waagh Banner
		local tBuildType = CpuBuildType()
		tBuildType.btype = CpuPrerequisites.BT_Building
		tBuildType.name = "ork_waagh_banner"
		if (self:TryBuild( tBuildType )) then
			aitrace("BuildController: Dynamic build of "..tBuildType.name)
		end
		return
	end
end

function OrkBuildBaseStrategy:GetBuildingName( sType )

	-- Return race specific object string
	if (sType == "HQ") then
		return "ork_hq"
		
	elseif (sType == "Generator") then
		return "ork_generator"
		
	elseif (sType == "BiggerGenerator") then
		return "ork_bigger_generator"
		
	elseif (sType == "VehicleBuilding") then
		return "ork_mek_shop"
		
	elseif (sType == "ListeningPost") then
		return "ork_gork_totem"
		
	elseif (sType == "Turret") then
		return "ork_waagh_banner"
		
	elseif (sType == "Mine") then
		return "ork_mine_field"
	end
	
	return nil
end

function OrkBuildBaseStrategy:GetAddonBuilding( sType )

	if (sType == "ork_waagh_banner_gunzaddon") then
		return "ork_waagh_banner"

	elseif (sType == "ork_waagh_banner_gunzaddon_2") then
		return "ork_waagh_banner"
		
	elseif (sType == "ork_gork_totem_addon_1") then
		return "ork_gork_totem"
		
	elseif (sType == "ork_gork_totem_addon_2") then
		return "ork_gork_totem"
		
	elseif (sType == "ork_hq_addon") then
		return "ork_hq"
	end

	for i = 1, table.getn(self.heroeWargear) do
		if (sType == self.heroeWargear[i][HeroeWargearNameIndex]) then
			return "ork_hq"
		end
	end

	for i = 3, table.getn(self.heroeWargear) do
		if (sType == self.heroeWargear[i][HeroeWargearNameIndex]) then
			return "ork_mek_shop"
		end
	end
	return nil
end

-- Arkhan 01.2006: Inherited method to check if an addon is a tier addon
function OrkBuildBaseStrategy:IsTierAddon( sName, iTargetTier )

	-- Check addon name and target tier
	if (sName == "ork_hq_addon" and iTargetTier == 3) then
		return true
	end
	return false
end

-- Arkhan 11.2005: Returns the squad cap and support cap of the given squad
function OrkBuildBaseStrategy:GetUnitStats(sSquadName)

	if (sSquadName == "ork_squad_slugga") then
		return 4, 0
	elseif (sSquadName == "ork_squad_bad_dok") then
		return 2, 0
	elseif (sSquadName == "ork_squad_shoota_boy") then
		return 4, 0
	elseif (sSquadName == "ork_squad_stormboy") then
		return 4, 0
	elseif (sSquadName == "ork_squad_tankbusta") then
		return 6, 0
	elseif (sSquadName == "ork_squad_ard_boys") then
		return 3, 0
	elseif (sSquadName == "ork_squad_nob") then
		return 9, 0
	elseif (sSquadName == "ork_squad_mega_armored_nobz") then
		return 6, 0
	elseif (sSquadName == "ork_squad_mek_boy") then
		return 3, 0
	elseif (sSquadName == "ork_squad_warboss") then
		return 5, 0
	elseif (sSquadName == "ork_squad_trukk") then
		return 0, 2
	elseif (sSquadName == "ork_squad_wartrak") then
		return 0, 2
	elseif (sSquadName == "ork_squad_killa_kan") then
		return 0, 2
	elseif (sSquadName == "ork_squad_dred") then
		return 0, 2
	elseif (sSquadName == "ork_squad_looted_tank") then
		return 0, 4
	elseif (sSquadName == "ork_squad_squiggoth") then
		return 0, 5
	end
	return 0, 0
end

function OrkBuildBaseStrategy:UpdateTierLevel()

	-- Reset tier level
	self.tierLevel = 1
	
	-- Prepare
	local iHQAddonID = cpu_manager.stats:GetAddOnID("ork_hq_addon")
	local oStats = cpu_manager.stats:GetPlayerStatsFromID( cpu_manager.player_id )
	
	-- Check HQ's for addons
	for oBase in oStats:GetBases() do

		-- Check for valid building
		if (oBase:IsValid() and not oBase:IsListeningPost()) then

			-- Check for HQ addon
			if (oBase:HasAddOn(iHQAddonID)) then
		
		   	self.tierLevel = 3
		   	return
				
			end
		end
	end
	
	-- Check tier 2 condition
	if (build_manager:GetSquadCapCurrentMax() > 50 and self:GetBuildingCountByName("ork_pile_o_guns", false) < 1) then
		self.tierLevel = 2
	end
end

function OrkBuildBaseStrategy:BuildFlexible()

	-- Dynamic research
   	-- Item-Syntax: ResearchName, MinTier, RequisitionCost, PowerCost, MinSquadCap, MinSupportCap, SquadName, SquadMinCount
	
	-- Compute tier 1 researches
	if (self.tierLevel >= 1 and self.m_iArmyStrength >= 1000) then

		-- Basic infantry upgrades
		self:DynamicResearch("ork_research_stikk_bombs", 1, 25, 75, 0, 0, nil, 0)
		self:DynamicResearch("ork_research_eavy_armor_boyz", 1,	120, 80, 0, 0, nil, 0)
		self:DynamicResearch("ork_research_moredakka", 1, 100, 60, 0, 0, nil, 0)
		self:DynamicResearch("ork_research_morechoppy", 1, 100,	60, 0, 0, nil, 0)
	
		-- Commander and leader upgrades
		self:DynamicResearch("ork_research_big_mek_3", 1, 60, 40, 0, 0, nil, 0)		-- Kustom Tellyporta
	end
	
	-- Compute tier 2 researches
	if (self.tierLevel >= 2 and self.m_iArmyStrength >= 1500) then
	
		-- Burna upgrades
		self:DynamicResearch("ork_research_burna", 2, 80, 40, 0, 2, nil, 0)
		self:DynamicResearch("ork_research_burna_2", 2, 100, 60, 0, 2, nil, 0)
		
		-- Commander and leader upgrades
		self:DynamicResearch("ork_research_tougher_bosses", 2, 80, 60, 0, 2, nil, 0)
		self:DynamicResearch("ork_research_big_mek_1", 2, 75, 75, 0, 2, nil, 0)
		self:DynamicResearch("ork_research_big_mek_2", 2, 75, 75, 0, 2, nil, 0)
		self:DynamicResearch("ork_wargear_upgrade_01_bigga_claw_wargear_research_mp", 2, 100, 60, 0, 2, nil, 0)
		--self:DynamicResearch("ork_wargear_upgrade_03_big_shoota_wargear_research_mp", 2, 60, 40, 30, 0, "ork_squad_warboss", 1)
		
		-- Speed booster
		--self:DynamicResearch("ork_research_speed_boost_stormboyz", 2, 35, 35, 0, 2, "ork_squad_stormboy", 2)
		
		-- Tankbusta bombs
		--self:DynamicResearch("ork_research_tankbustabombs", 2, 80, 60, 0, 2, "ork_squad_tankbusta", 1)
	end
	
	-- Compute tier 3 researches
	if (self.tierLevel >= 3 and self.m_iArmyStrength >= 2000) then
	
		-- Vehicle upgrades
		self:DynamicResearch("ork_research_extra_armour", 3, 150, 100, 0, 6, nil, 0)		

		-- Basic infantry upgrades
		self:DynamicResearch("ork_research_eavy_armor_boyz_2", 3, 150, 100, 0, 4, nil, 0)
		self:DynamicResearch("ork_research_eavy_armor_boyz_2", 3, 150, 100, 0, 4, nil, 0)
		self:DynamicResearch("ork_research_evenmorechoppy", 2, 120, 80, 0, 4, nil, 0)
		self:DynamicResearch("ork_research_evenmoredakka", 2, 120, 80, 0, 4, nil, 0)
	
		-- Commander and leader upgrades
		self:DynamicResearch("ork_research_tougher_bosses_2", 3, 100, 80, 0, 4, nil, 0)
		self:DynamicResearch("ork_research_powerclaw", 2, 150, 100, 0, 4, nil, 0)
		self:DynamicResearch("ork_wargear_upgrade_02_mega_claw_wargear_research_mp", 3, 100, 60, 0, 4, nil,0)
		--self:DynamicResearch("ork_wargear_upgrade_04_mega_blasta_wargear_research_mp", 3, 80, 60, 40, 4, "ork_squad_warboss", 1)
	end
	
	-- DynamicAddon(sAddonName, iAddonCount, iMinTier, iRequisitionCost, iPowerCost, iMinSquadCap, iMinSupportCap, sSquadName, iSquadMinCount)
	if (self:CountSquads("ork_squad_mek_boy") > 0 and self.m_iArmyStrength >= 1000 + self.tierLevel * 250) then
	
		-- Hero wargear
		self:DynamicAddon(self.heroeWargear[self.heroeWargearPattern1][HeroeWargearNameIndex], 1, 1,self.heroeWargear[self.heroeWargearPattern1][HeroeWargearReqIndex], self.heroeWargear[self.heroeWargearPattern1][HeroeWargearPowIndex],0, 0, self.HeroSquadName, 0)
		self:DynamicAddon(self.heroeWargear[self.heroeWargearPattern2][HeroeWargearNameIndex], 1, 2,self.heroeWargear[self.heroeWargearPattern2][HeroeWargearReqIndex], self.heroeWargear[self.heroeWargearPattern2][HeroeWargearPowIndex],0, 2, self.HeroSquadName, 0)
		self:DynamicAddon(self.heroeWargear[self.heroeWargearPattern3][HeroeWargearNameIndex], 1, 2,self.heroeWargear[self.heroeWargearPattern3][HeroeWargearReqIndex], self.heroeWargear[self.heroeWargearPattern3][HeroeWargearPowIndex],0, 4, self.HeroSquadName, 0)
		for i = 1, table.getn(self.heroeWargear) do
			self:DynamicAddon(self.heroeWargear[i][HeroeWargearNameIndex], 1, 3,self.heroeWargear[i][HeroeWargearReqIndex], self.heroeWargear[i][HeroeWargearPowIndex],40, 4,self.HeroSquadName, 1)
		end
	end

	-- Restrict dynamic builds to hard difficulty or higher
	if (CpuManager.AISettings.bMultiBuildings) then

		-- Dynamic buildings
    	-- Item-Syntax: BuildingName, BuildingCount, MinTier, MinRequisition, MinPower, MinSquadCap, MinSupportCap
		if (self:GetBuildingCountByName("ork_hq") > 1) then
			self:DynamicBuild("ork_boy_hut", 2, 2, 800, 200, 6, 2)
			self:DynamicBuild("ork_mek_shop", 2, 2, 200, 800, 6, 2)
		end
	end
end

-- Arkhan 01.2006: Virtual method to check if force tech should be computed
function OrkBuildBaseStrategy:ForceTech()

	-- Check time
	if (g_iGMT < 60 * CpuManager.ForceTech.StartTier1) then
		return false
	end
	
	-- Check ressources
	local iRequisition = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition )
	local iPower = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Power )

	-- Check tier
	local iTierLevel = self:GetTierLevel()
	if (iTierLevel == 1) then

		-- Check resources
		if (iRequisition > 600 and iPower > 100) then
			return false
		end
		return true
		
	elseif (iTierLevel == 2) then

		-- Check build channel for mek shop
		if (self:GetBuildingCountByName("ork_mek_shop", false) < 1) then
			return true
		end
		
		-- Check time
		if (g_iGMT > 60 * CpuManager.ForceTech.StartTier2 and (iRequisition < 600 or iPower < 600)) then
			return true
		end
		
	end
	return false
end

-- Arkhan 03.2006: Return placement type for buildings
function OrkBuildBaseStrategy:GetPlacementType(iBuildingID)
	
	
	-- Check building
	if (cpu_manager:IsHQ(iBuildingID)) then
		if (self:GetBuildingCountByName("ork_hq") < 1) then
			return "HQ"
		else
			return "Safeplace"
		end
	elseif (iBuildingID == cpu_manager.stats:GetBuildingID("ork_boy_hut") or
			iBuildingID == cpu_manager.stats:GetBuildingID("ork_mek_shop")) then
		return "Military"
	elseif (cpu_manager:IsTurret(iBuildingID)) then
		return "Front2"
	elseif (cpu_manager:IsMine(iBuildingID)) then
		return "Mine"
	elseif (cpu_manager:IsGenerator(iBuildingID) or iBuildingID == cpu_manager.stats:GetBuildingID("ork_pile_o_guns")) then
		return "BaseBack"
	end
	return "Basic"
end

-- Arkhan 03.2006: Inherited method to modify squad demand
function OrkBuildBaseStrategy:ModifySquadDemand(iUnitID)

	-- No more docs then slugga/nob squads
	if (iUnitID == cpu_manager.stats:GetSquadID("ork_squad_bad_dok")) then

		-- Check number of ork squads
		local dok_attach = function( squad_ai )
			return (squad_ai:GetTactic():GetUnitStrength() >= 200 and squad_ai:CanReceiveAttachment())
		end
		local num_attach = self:CountSquads("ork_squad_slugga", dok_attach) + 
				   self:CountSquads("ork_squad_shoota_boy", dok_attach) +
				   self:CountSquads("ork_squad_tankbusta", dok_attach) +
				   self:CountSquads("ork_squad_nob", dok_attach)

		-- Check number of docs
		local num_dok = self:CountSquads("ork_squad_bad_dok")
		if (num_dok > 0 and num_dok >= num_attach) then
			return 0
		end
	end
	return BuildBaseStrategy.ModifySquadDemand(self, iUnitID)
end

-- Arkhan 11.2006: Virtual method for checking out relic units
function OrkBuildBaseStrategy:RelicRequired(sName)

	-- Check name
	if (sName == "ork_squad_squiggoth") then
		return true
	elseif (sName == "ork_squad_mega_armored_nobz") then
		return true
	elseif (sName == "ork_wargear_upgrade_lvl_1_bm_los_mask") then
		return true
	elseif (sName == "ork_wargear_upgrade_lvl_1_bm_repair") then
		return true
	elseif (sName == "ork_wargear_upgrade_lvl_2_fasta_legz_addon") then
		return true
	elseif (sName == "ork_wargear_upgrade_lvl_2_red_gob_addon") then
		return true
	elseif (sName == "ork_wargear_upgrade_lvl_3_boss_pole_addon") then
		return true
	elseif (sName == "ork_wargear_upgrade_lvl_3_mega_eavy_armor_addon") then
		return true
	elseif (sName == "ork_wargear_upgrade_01_bigga_claw_wargear_research_mp") then
		return true
	elseif (sName == "ork_wargear_upgrade_02_mega_claw_wargear_research_mp") then
		return true
	end
	return false
end
