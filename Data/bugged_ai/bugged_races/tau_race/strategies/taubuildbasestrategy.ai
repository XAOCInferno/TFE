----------------------------------------
-- File: 'taubuildbasestrategy.ai'
-- Edited by Thudmeizer @ 02.10.2008

class 'TauBuildBaseStrategy' (BuildBaseStrategy)

function TauBuildBaseStrategy:__init( baseinfo ) super( baseinfo )

	-- Add detector units (Best first, worst last)
	self:AddDetectorUnit("tau_commander_squad")
	self:AddDetectorUnit("tau_ethereal_squad")
	self:AddDetectorUnit("tau_pathfinder_squad")
	self:AddDetectorUnit("tau_kroot_shaper_squad")
	
	self.heroeWargear = {}
	
	--Heroe Wargear
	-- Name, Req, Power
	table.insert(self.heroeWargear, {"tau_wargear_upgrade_lvl_1_advanced_sensor_array_addon",60,40})
	table.insert(self.heroeWargear, {"tau_wargear_upgrade_lvl_1_gun_drone_addon",80,60})
	table.insert(self.heroeWargear, {"tau_wargear_upgrade_lvl_2_jetpack_booster_addon",60,40})
	table.insert(self.heroeWargear, {"tau_wargear_upgrade_lvl_2_shield_drone_addon",80,60})
	table.insert(self.heroeWargear, {"tau_wargear_upgrade_lvl_3_iridium_armor_addon",140,100})
	table.insert(self.heroeWargear, {"tau_wargear_upgrade_lvl_3_stealth_field_addon",180,150})
	
	self.HeroSquadName = "tau_commander_squad"
	
	local heroeDelayLimit = 10 --% of waiting for the upgrade
	local heroeDelay = math.random (1,100)
	local heroeWargearCostFactor = 1.5
	aipushtrace ("BuildBaseStrategy:Heroe Wargear Election")
	
	--choose Upgrades
	self.heroeWargearPattern1 = math.random(1,2)
	self.heroeWargearPattern2 = math.random(3,4)
	self.heroeWargearPattern3 = math.random(5,6)
	
	aitrace ("Heroe Wargear T1: "..self.heroeWargear[self.heroeWargearPattern1][HeroeWargearNameIndex])
	aitrace ("Heroe Wargear T2: "..self.heroeWargear[self.heroeWargearPattern2][HeroeWargearNameIndex])
	aitrace ("Heroe Wargear T3: "..self.heroeWargear[self.heroeWargearPattern3][HeroeWargearNameIndex])
	
	if heroeDelay <= heroeDelayLimit then
		aipoptrace ("Heroe Wargear Delayed")
		for i = 1, table.getn(self.heroeWargear) do
			self.heroeWargear[i][HeroeWargearReqIndex]=self.heroeWargear[i][HeroeWargearReqIndex]*heroeWargearCostFactor
			self.heroeWargear[i][HeroeWargearPowIndex]=self.heroeWargear[i][HeroeWargearPowIndex]*heroeWargearCostFactor
		end
	else
		aipoptrace ("Heroe Wargear Not Delayed")
	end
end

function TauBuildBaseStrategy:ChooseBuildProgram()

	-- Decide between Kroot and Tau strategy
	if (math.random(1, 3) ~= 1) then
		return 1	-- Tau strategy
	else
		return 2	-- Kroot strategy
	end
end

function TauBuildBaseStrategy:EvaluateSquadCap()
	
	-- Check if any buildings are in production
	local iBuildingID = cpu_manager.stats:GetBuildingID("tau_research_building")
	for oBuildChannel in build_manager:GetBuildChannelAIs() do

		-- Check building ID
		if (oBuildChannel:GetBlueprintID() == iBuildingID and not oBuildChannel:ConstructionDone()) then
			return
		end
	end

	-- Check squad and support cap
	aitrace ("  Tau checking cap")
	if (self:CheckSquadCap(200, 100) or self:CheckSupportCap(200, 100)) then
		aitrace ("   Tau Need more cap")
		--Fisrt try the default pop resource
		local  bNeedMore = false
		local tBuildType = CpuBuildType()
		tBuildType.btype = CpuPrerequisites.BT_Building
		tBuildType.name = "tau_research_building"
		if (self:GetBuildingCountByName(tBuildType.name) < 1) then
			aitrace ("  Not built  "..tBuildType.name)
			if (self:TryBuild( tBuildType )) then
				aitrace("BuildController: Dynamic build of "..tBuildType.name)
			end
		else
			--Try  the first research
			if ( not cpu_manager.cpu_player:IsResearchComplete("tau_teachings_of_enlightenment_research")) then
				aitrace("BuildController: Dynamic build of tau_teachings_of_enlightenment_research")
				self:DynamicResearch("tau_teachings_of_enlightenment_research", 1, 100, 60, 6, 0, nil, 0)
			else
				--if already done try the second
				if ( not cpu_manager.cpu_player:IsResearchComplete("tau_teachings_of_enlightenment_research_2")) then
					tBuildType.name = "tau_hq"
					if (self:GetBuildingCountByName(tBuildType.name) > 1) then
						--Go for the second
						aitrace("BuildController: Dynamic build of tau_teachings_of_enlightenment_research 2")
						self:DynamicResearch("tau_teachings_of_enlightenment_research_2", 2, 120, 80, 9, 0, nil, 0)
					else
						--not second HQ, go for other pop upgrades
						bNeedMore = true
					end
				else
					--already done both, go for other pop upgrades
					bNeedMore = true
				end
			end
		end
		
		if bNeedMore then
			-- Build this building
			local num_kroots = self:CountSquads("tau_kroot_carnivore_squad")
			local num_fw = self:CountSquads("tau_fire_warrior_squad")
			local num_troops = num_kroots + num_fw
			--Continue the path according to the troops already built
			local num_random = 0
			local num_limit = 0
			
			if (num_troops > 0) then
				num_random =  math.random (num_troops)
				num_limit = num_kroots
			else
				num_random =  math.random(100)
				num_limit = 50
			end
			if (num_random <= num_limit) then
				aitrace ("   Trying Kroot Path, max: "..tostring (num_troops).." limit: "..tostring (num_limit).." , random: "..tostring(num_random))
				--Try kroot path first
				tBuildType.name = "tau_shrine_of_kauyon"
				if (self:GetBuildingCountByName(tBuildType.name) < 1) then
					aitrace ("  Not built  "..tBuildType.name)
					if (self:TryBuild( tBuildType )) then
						aitrace("BuildController: Dynamic build of "..tBuildType.name)
					end
				else
					aitrace ("  Already Built  " ..tBuildType.name)
					if (not cpu_manager.cpu_player:IsResearchComplete("tau_teachings_of_kauyon_research")) then
						aitrace("BuildController: Dynamic build of tau_teachings_of_kauyon_research")
						self:DynamicResearch("tau_teachings_of_kauyon_research", 2, 150, 80, 6, 0, nil, 0)
					else
						tBuildType.name = "tau_shrine_of_montka"
						if (self:GetBuildingCountByName(tBuildType.name) < 1) then
							if (self:TryBuild( tBuildType )) then
								aitrace("BuildController: Dynamic build of "..tBuildType.name)
							end
						else
							if ( not cpu_manager.cpu_player:IsResearchComplete("tau_teachings_of_montka_research")) then
								aitrace("BuildController: Dynamic build of tau_teachings_of_montka_research")
								self:DynamicResearch("tau_teachings_of_montka_research", 2, 150, 80, 6, 0, nil, 0)
							end
						end
					end
				end
			else
				--else try Fire Warrior Path
				aitrace ("   Trying FW Path, max: "..tostring (num_troops).." limit: "..tostring (num_limit).." , random: "..tostring(num_random))
				tBuildType.name = "tau_shrine_of_montka"
				if (self:GetBuildingCountByName(tBuildType.name) < 1) then
					aitrace ("  Not built  "..tBuildType.name)
					if (self:TryBuild( tBuildType )) then
						aitrace("BuildController: Dynamic build of "..tBuildType.name)
					end
				else
					aitrace ("  Already Built  "..tBuildType.name)
					if (not cpu_manager.cpu_player:IsResearchComplete("tau_teachings_of_montka_research")) then
						aitrace("BuildController: Dynamic build of tau_teachings_of_montka_research")
						self:DynamicResearch("tau_teachings_of_montka_research", 2, 150, 80, 6, 0, nil, 0)
					else
						tBuildType.name = "tau_shrine_of_kauyon"
						if (self:GetBuildingCountByName(tBuildType.name) < 1) then
							if (self:TryBuild( tBuildType )) then
								aitrace("BuildController: Dynamic build of "..tBuildType.name)
							end
						else
							if (not cpu_manager.cpu_player:IsResearchComplete("tau_teachings_of_kauyon_research")) then
								aitrace("BuildController: Dynamic build of tau_teachings_of_kauyon_research")
								self:DynamicResearch("tau_teachings_of_kauyon_research", 2, 150, 80, 6, 0, nil, 0)
							end
						end
					end
				end
			end
		end

		local tBuildType = CpuBuildType()
		tBuildType.btype = CpuPrerequisites.BT_Building
		tBuildType.name = "tau_research_building"
		if (self:GetBuildingCountByName(tBuildType.name) < 1) then
			if (self:TryBuild( tBuildType )) then
				aitrace("BuildController: Dynamic build of "..tBuildType.name)
			end
		end
		return
	end
end

function TauBuildBaseStrategy:GetBuildingName( sType )

	-- Return race specific object string
	if (sType == "HQ") then
		return "tau_hq"
		
	elseif (sType == "Generator") then
		return "tau_plasma_generator"
		
	elseif (sType == "BiggerGenerator") then
		return "tau_thermoplasma_generator"
		
	elseif (sType == "VehicleBuilding") then
		return "tau_vehicle_building"
		
	elseif (sType == "ListeningPost") then
		return "tau_listening_post"
		
	elseif (sType == "Turret") then
		return "tau_listening_post"
		
	elseif (sType == "Mine") then
		return "tau_listening_post"
	end
	
	return nil
end

function TauBuildBaseStrategy:GetAddonBuilding( sType )

	if (sType == "addon_tau_list_post_1") then
		return "tau_listening_post"
		
	elseif (sType == "addon_tau_list_post_2") then
		return "tau_listening_post"
	end
	
	for i = 1, table.getn(self.heroeWargear) do
		if (sType == self.heroeWargear[i][HeroeWargearNameIndex]) then
			return "tau_hq"
		end
	end
	
	return nil
end

-- Returns the squad cap and support cap of the given squad
function TauBuildBaseStrategy:GetUnitStats(sSquadName)

	if (sSquadName == "tau_stealth_team_squad") then
		return 3, 0
	elseif (sSquadName == "tau_fire_warrior_squad") then
		return 3, 0
	elseif (sSquadName == "tau_shasui_fire_warrior_bodyguard_sp") then
		return 0, 0
	elseif (sSquadName == "tau_vespid_auxiliary_squad") then
		return 3, 0
	elseif (sSquadName == "tau_kroot_carnivore_squad") then
		return 2, 0
	elseif (sSquadName == "tau_kroot_hound_squad") then
		return 2, 0
	elseif (sSquadName == "tau_pathfinder_squad") then
		return 1, 0
	elseif (sSquadName == "tau_broadside_battlesuit_squad") then
		return 1, 2
	elseif (sSquadName == "tau_crisis_suit_squad") then
		return 3, 2
	elseif (sSquadName == "tau_devilfish_troop_carrier") then
		return 0, 2
	elseif (sSquadName == "tau_drone_squad") then
		return 0, 2
	elseif (sSquadName == "tau_skyray_squad") then
		return 0, 3
	elseif (sSquadName == "tau_drone_harbinger_squad") then
		return 0, 2
	elseif (sSquadName == "tau_hammerhead_gunship_squad") then
		return 0, 3
	elseif (sSquadName == "tau_krootox_squad") then
		return 0, 2
	elseif (sSquadName == "tau_greater_knarloc_squad") then
		return 0, 4
	end
	return 0, 0
end

function TauBuildBaseStrategy:UpdateTierLevel()

	-- Reset tier level
	self.tierLevel = 1

	-- Check presence of buildings
 	if (self:GetBuildingCountByName("tau_shrine_of_montka") > 0 or
		self:GetBuildingCountByName("tau_shrine_of_kauyon") > 0) then
		self.tierLevel = 2
	end

	-- Check presence of buildings
	if (self:GetBuildingCountByName("tau_shrine_of_purpose") > 0) then
		self.tierLevel = 3
	end
end

function TauBuildBaseStrategy:BuildFlexible()

	-- Get unit counts
	local iRangedCount = self:CountSquads("tau_fire_warrior_squad") + self:CountSquads("tau_pathfinder_squad")
	local iMechCount = self:CountSquads("tau_crisis_suit_squad") + self:CountSquads("tau_broadside_battlesuit_squad")
	local iKrootCount = self:CountSquads("tau_kroot_carnivore_squad") 
	
	-- Dynamic research
	-- Item-Syntax: ResearchName, MinTier, RequisitionCost, PowerCost, MinSquadCap, MinSupportCap, SquadName, SquadMinCount
	
	-- Compute tier 1 researches
	if (self.tierLevel >= 1 and self.m_iArmyStrength >= 1000) then
	
		-- Basic infantry upgrades
		self:DynamicResearch("tau_inf_armour_research", 1, 120, 80, 8, 0, nil, 0)
		if (iRangedCount >= 2) then
			self:DynamicResearch("tau_plasma_field_generators_research", 1, 80, 60, 6, 0, nil, 0)
		end
	
		-- Kroot upgrades
		if (iKrootCount >= 2) then
			self:DynamicResearch("tau_hunter_savagery_research", 1, 80, 60, 8, 0, nil, 0)
			self:DynamicResearch("tau_feral_leap_research", 1, 80, 60, 8, 0, nil, 0)
		end
		
		-- Hero wargear
		self:DynamicResearch("tau_wargear_upgrade_01_flamer_research_mp", 1, 60, 40, 8, 0, "tau_commander_squad", 1)
		self:DynamicResearch("tau_wargear_upgrade_04_missile_pod_research_mp", 1, 60, 60, 8, 0, "tau_commander_squad", 1)
	end
	
	-- Compute tier 2 researches
	if (self.tierLevel >= 2 and self.m_iArmyStrength >= 1500) then
	
		-- Vehicle upgrades
		self:DynamicResearch("tau_healing_research", 2, 100, 25, 8, 2, "tau_devilfish_troop_carrier", 2)
		if (iMechCount >= 2) then
			self:DynamicResearch("tau_mech_armour_research", 2, 120, 80, 8, 2, nil, 0)
		end
	
		-- Basic infantry upgrades
		if (iRangedCount >= 2) then
			self:DynamicResearch("tau_plasma_field_generators_research_2", 2, 100, 80, 8, 2, nil, 0)
		end
		self:DynamicResearch("tau_inf_armour_research_2", 2, 150, 100, 8, 2, nil, 0)
		
		-- Kroot upgrades
		if (iKrootCount >= 2) then
			self:DynamicResearch("tau_hunter_savagery_research_2", 2, 100, 80, 8, 2, nil, 0)
		end
		
		-- Hero wargear
		self:DynamicResearch("tau_wargear_upgrade_02_fusion_blaster_research_mp", 2, 80, 60, 8, 2, "tau_commander_squad", 1)
		self:DynamicResearch("tau_wargear_upgrade_03_plasma_rifle_research_mp", 2, 100, 80, 8, 2, "tau_commander_squad", 1)
	end
	
	-- Compute tier 3 researches
	if (self.tierLevel >= 3 and self.m_iArmyStrength >= 2000) then
	
		-- Vehicle upgrades
		self:DynamicResearch("tau_veh_armour_research", 3, 150, 100, 6, 6, nil, 0)
		self:DynamicResearch("tau_railguns_research", 3, 80, 60, 6, 6, nil, 0)
		if (iMechCount + self:CountSquads("tau_skyray_squad") >= 2) then
			self:DynamicResearch("tau_improved_missiles_research", 3, 80, 60, 6, 6, nil, 0)
		end
	
		-- Basic infantry upgrades
		self:DynamicResearch("tau_weapon_suspensors_research", 3, 100, 60, 6, 6, nil, 0)
		
		-- Kroot upgrades
		if (self:CountSquads("tau_krootox_squad") + self:CountSquads("tau_greater_knarloc_squad") > 0) then
			self:DynamicResearch("tau_kroot_armour_research", 3, 120, 80, 6, 6, nil, 0)
			self:DynamicResearch("tau_kroot_charge_research", 3, 100, 60, 6, 6, nil, 0)
		end
	end
	
	-- DynamicAddon(sAddonName, iAddonCount, iMinTier, iRequisitionCost, iPowerCost, iMinSquadCap, iMinSupportCap, sSquadName, iSquadMinCount)
	if (self:CountSquads("tau_commander_squad") > 0 and self.m_iArmyStrength >= 1000 + self.tierLevel * 250) then
	
		-- Hero wargear
		self:DynamicAddon(self.heroeWargear[self.heroeWargearPattern1][HeroeWargearNameIndex], 1, 1,self.heroeWargear[self.heroeWargearPattern1][HeroeWargearReqIndex], self.heroeWargear[self.heroeWargearPattern1][HeroeWargearPowIndex],6, 0, nil, 0)
		self:DynamicAddon(self.heroeWargear[self.heroeWargearPattern2][HeroeWargearNameIndex], 1, 2,self.heroeWargear[self.heroeWargearPattern2][HeroeWargearReqIndex], self.heroeWargear[self.heroeWargearPattern2][HeroeWargearPowIndex],12, 0, nil, 0)
		self:DynamicAddon(self.heroeWargear[self.heroeWargearPattern3][HeroeWargearNameIndex], 1, 2,self.heroeWargear[self.heroeWargearPattern3][HeroeWargearReqIndex], self.heroeWargear[self.heroeWargearPattern3][HeroeWargearPowIndex],16, 4, nil, 0)
		for i= 1, table.getn(self.heroeWargear) do
			self:DynamicAddon(self.heroeWargear[i][HeroeWargearNameIndex], 1, 2,self.heroeWargear[i][HeroeWargearReqIndex], self.heroeWargear[i][HeroeWargearPowIndex],10, 0, nil, 0)
		end
	end
	
	-- Restrict dynamic builds to hard difficulty or higher
	if (CpuManager.AISettings.bMultiBuildings) then

		-- Dynamic Build	
		-- Item-Syntax: BuildingName, BuildingCount, MinTier, MinRequisition, MinPower, MinSquadCap, MinSupportCap
		if (self:GetBuildingCountByName("tau_hq") > 1) then
			self:DynamicBuild("tau_barracks", 2, 2, 800, 200, 6, 2)
			self:DynamicBuild("tau_vehicle_building", 2, 2, 200, 800, 6, 2)
		end
	end
end

-- Method to check if force tech should be computed
function TauBuildBaseStrategy:ForceTech()

	-- Check time
	if (g_iGMT < 60 * CpuManager.ForceTech.StartTier1) then
		return false
	end

	-- Check ressources
	local iRequisition = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition )
	local iPower = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Power )
	
	-- Check tier
	local iTierLevel = self:GetTierLevel()
	if (iTierLevel == 1) then
	
		-- Check resources
		if (iRequisition > 600 and iPower > 200) then
			return false
		end
		
		-- Check build channel for building
		if (self:GetBuildingCountByName("tau_shrine_of_montka", false) >= 1) then
			return false
		end
		return true

	elseif (iTierLevel == 2) then

		-- Check for building
		if (self:GetBuildingCountByName("tau_vehicle_building", false) < 1) then
			return true
		end
		
		-- Check time
		if (g_iGMT > 60 * CpuManager.ForceTech.StartTier2 and (iRequisition < 600 or iPower < 600)) then
			return true
		end
		
	end
	return false
end

-- Arkhan 03.2006: Return placement type for buildings
function TauBuildBaseStrategy:GetPlacementType(iBuildingID)
	
	-- Check building
	if (cpu_manager:IsHQ(iBuildingID)) then
		if (self:GetBuildingCountByName("tau_hq") < 1) then
			return "HQ"
		else
			return "Safeplace"
		end
	elseif (iBuildingID == cpu_manager.stats:GetBuildingID("tau_barracks") or
			--iBuildingID == cpu_manager.stats:GetBuildingID("tau_kroot_nest") or
			iBuildingID == cpu_manager.stats:GetBuildingID("tau_vehicle_building")) then
		return "Military"
	elseif (cpu_manager:IsGenerator(iBuildingID) or
			iBuildingID == cpu_manager.stats:GetBuildingID("tau_research_building") or
			iBuildingID == cpu_manager.stats:GetBuildingID("tau_shrine_of_montka") or
			iBuildingID == cpu_manager.stats:GetBuildingID("tau_shrine_of_kauyon") or
			iBuildingID == cpu_manager.stats:GetBuildingID("tau_shrine_of_purpose")) then
		return "BaseBack"
	end
	return "Basic"
end

-- Inherited method to modify squad demand
function TauBuildBaseStrategy:ModifySquadDemand(iUnitID)

	-- No more shapers then regular squads 
	if (iUnitID == cpu_manager.stats:GetSquadID("tau_kroot_shaper_squad")) then
		
		-- Check number of attachable squads 
		local shaper_attach = function ( squad_ai )
			return (squad_ai:GetTactic():GetUnitStrength() >= 250 and squad_ai:CanReceiveAttachment())
		end
		local num_attach = self:CountSquads("tau_kroot_carnivore_squad", shaper_attach) 
 		-- Check shaper count
		local num_shaper = self:CountSquads("tau_kroot_shaper_squad")
		if (num_shaper >= num_attach) then
			return 0
		end	
	end
	return BuildBaseStrategy.ModifySquadDemand(self, iUnitID)
end

-- Arkhan 11.2006: Virtual method for checking out relic units
function TauBuildBaseStrategy:RelicRequired(sName)

	-- Check name
	if (sName == "tau_crisis_suit_squad") then
		return true
	elseif (sName == "tau_greater_knarloc_squad") then
		return true
	elseif (sName == "tau_wargear_upgrade_lvl_1_advanced_sensor_array_addon") then
		return true
	elseif (sName == "tau_wargear_upgrade_lvl_1_gun_drone_addon") then
		return true
	elseif (sName == "tau_wargear_upgrade_lvl_2_jetpack_booster_addon") then
		return true
	elseif (sName == "tau_wargear_upgrade_lvl_2_shield_drone_addon") then
		return true
	elseif (sName == "tau_wargear_upgrade_lvl_3_iridium_armor_addon") then
		return true
	elseif (sName == "tau_wargear_upgrade_lvl_3_stealth_field_addon") then
		return true
	elseif (sName == "tau_wargear_upgrade_02_fusion_blaster_research_mp") then
		return true
	elseif (sName == "tau_wargear_upgrade_03_plasma_rifle_research_mp") then
		return true
	end
	return false
end