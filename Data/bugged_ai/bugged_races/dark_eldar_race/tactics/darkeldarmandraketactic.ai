----------------------------------------
-- File: 'darkeldarmandraketactic.ai'
-- Created by Arkhan		@ 06.04.2008

class 'DarkEldarMandrakeTactic' (DarkEldarInfantryTactic)

Mandrake = {}

function DarkEldarMandrakeTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Mandrake Tactic")
	
	-- Force melee stance (Commander detaching can cause false stances)
	self.iForceMeleeStance = true
end

function DarkEldarMandrakeTactic:InitAbilities()

	-- Init ability ID's
	if (Mandrake.infiltrate_id == nil) then
		Mandrake.infiltrate_id = cpu_manager.stats:GetAbilityID( "ability_infiltrate_mandrake" )	
	end
end

function DarkEldarMandrakeTactic:DoAbilities()

	-- Check if I should enable/disable infiltration
	self:DoAbilityInfiltrate()
	
	-- Compute common abilities
	DarkEldarInfantryTactic.DoAbilities(self)
end

function DarkEldarMandrakeTactic:ToggleInfiltrate( squad_ai, state )

	-- Check if the squad can handle infiltration
	local id = cpu_manager.stats:GetAbilityID( "ability_infiltrate_mandrake" )
	if (not squad_ai:CanDoAbility(id)) then
		return
	end
	
	-- Check if it's already in desired state
	if (squad_ai:IsUsingAbility(id) == state) then
		return 
	end
	
	-- Activate Infiltration
	squad_ai:DoSpecialAbility(id)
end

function DarkEldarMandrakeTactic:DoAbilityInfiltrate()

	-- Check if we can use infiltrate ability
	if (not self.squad_ai:CanDoAbility(Mandrake.InfiltrateID)) then
		return
	end

    -- Check whether we're using the ability
    local bIsUsing = self.squad_ai:IsUsingAbility(Mandrake.InfiltrateID)

    -- Check if we're in a state that should Infiltrate regardless of enemy presence
    local bRunAWay = (self.squad_ai:IsBroken() or (self.stateID == Tactic.StateID.AvoidDeath) or (self.stateID == Tactic.StateID.DoDance))

    -- Check if we're doing any sort of moving
    local bMoving = self:IsMoving()

    -- Check if we're moving around or capping
    local bCapping = (self.squad_ai:IsCapturing() or self.squad_ai:IsInStateMove())

    -- Check if we should slow down for enemies nearing range
    local vSquadPos = self.squad_ai:GetPosition()
    local oEnemy = cpu_manager.cpu_player:FindFirstEnemy(vSquadPos, 40, 1)
    local bNoEnemy = (oEnemy == nil)

    -- Check if Infiltrate should be toggled
    if ((bIsUsing == true and ((bIsInCombat == true and bNoEnemy == false) or bMoving == false)) or
        (bIsUsing == false and ((bIsInCombat == true and bNoEnemy == true and bShooting == false) or bCapping == true or bRunAway == true))) then
        self.squad_ai:DoSpecialAbility(Scout.iInfiltrateID)
    end
	
	-- Check if we can cannibalize
	local vSquadPos = self.squad_ai:GetPosition()
	if (not self.squad_ai:IsInCombat() and not self.squad_ai:IsCapturing() and not self:IsMoving() and
		not cpu_manager.terrain_analyzer:HasThreat(vSquadPos, 35) and self.squad_ai:GetNumCorpses(25) > 0) then
		self.squad_ai:DoCannibalize()
	end
end