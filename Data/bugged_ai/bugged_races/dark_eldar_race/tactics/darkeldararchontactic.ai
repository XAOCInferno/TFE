----------------------------------------
-- File: 'darkeldararchontactic.ai'
-- Edited by Thudmeizer @ 26.10.2008

class 'DarkEldarArchonTactic' (DarkEldarInfantryTactic)

DarkEldarArchon = {}

function DarkEldarArchonTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Dark Eldar Archon Tactic")
	
	self.dance_time = 0
end

function DarkEldarArchonTactic:InitAbilities()

	-- Init animus vitae ability ID
	if (DarkEldarArchon.vitae_id == nil) then
		DarkEldarArchon.vitae_id = cpu_manager.stats:GetAbilityID( "dark_eldar_animus_vitae" )
	end
	
	-- Init haywire bomb ability ID
	if (DarkEldarArchon.iHaywireBombID == nil) then
		DarkEldarArchon.iHaywireBombID = cpu_manager.stats:GetAbilityID( "dark_eldar_haywire_bombs" )
	end

	--if (DarkEldarArchon.crucible_id == nil) then
	--	DarkEldarArchon.crucible_id = cpu_manager.stats:GetAbilityID( "dark_eldar_crucible" )
	--end
end

function DarkEldarArchonTactic:DoAbilities()

	--Ability.DoAbilityTarget( self.squad_ai, DarkEldarArchon.crucible_id, Ability.Filters.CloseInfantryEnemy, 8 )

	-- Try to use animus vitae ability
	Ability.DoAbilityTarget(self.squad_ai, DarkEldarArchon.vitae_id, Ability.Filters.CloseCommanderEnemy, 1)
	Ability.DoAbilityTarget(self.squad_ai, DarkEldarArchon.vitae_id, Ability.Filters.CloseInfantryEnemy, 8)
	
	-- Try to use haywire bomb ability
	Ability.DoAbilityTarget(self.squad_ai, DarkEldarArchon.iHaywireBombID, Ability.Filters.CloseVehicleEnemy, 1)
	
	-- Check if I should enable/disable fleet of foot
	if (not self.squad_ai:IsAttached()) then
		self:DoAbilityFoF()
	end
end

-- Assassinate win condition -- never attack
function DarkEldarArchonTactic:IsAttacker()
	return (not cpu_manager.assassinate and self:IsCommanderAttacker())
end

-- Assassinate win condition -- never defend
function DarkEldarArchonTactic:IsDefender()
	return (not cpu_manager.assassinate and self:IsCommanderDefender())
end

function DarkEldarArchonTactic:Update()

	if (self:IsComplete()) then
		return
	end
	
	-- State machine
	if (not InfantryTactic.Update( self )) then
		return
	end
	
	local bSetRanged = false
    local bSetMelee = false
	local eStance = self.squad_ai:GetMeleeStance()
	-- Check health
    if (self.squad_ai:GetHealthPercentage() > 0.4) then
        bSetMelee = (eStance == SquadAI.MSTANCE_Ranged)
	else
        bSetRanged = (eStance == SquadAI.MSTANCE_Assault)
    end
	
	if (bSetRanged) then
        self.squad_ai:DoSetMeleeStance( SquadAI.MSTANCE_Ranged )
        self.dance_time = g_iGMT
    elseif (bSetMelee and self.stateID ~= Tactic.StateID.DoDance and g_iGMT > self.dance_time + 10) then
        self.squad_ai:DoSetDefaultMeleeStance()
        self.dance_time = 0
    end
	
	-- Try to attach
	if (not cpu_manager.assassinate and self.squad_ai:GetMeleeStance() == SquadAI.MSTANCE_Assault) then		
		if (self.squad_ai:IsInCombat() or self.squad_ai:WasRecentlyHurt()) then
			if (self:TryAttachSquad(false, true, 50, 150, self.m_fCommanderAttachHealth) == nil) then
				self:TryAttachSquadMelee()
			end
		end
	end

end
