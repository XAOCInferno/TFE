----------------------------------------
-- File: 'chaplaintactic.ai'
-- Edited by Thudmeizer @ 01.10.2008

class 'ChaplainTactic' (SpaceMarineInfantryTactic)

Chaplain = {}

function ChaplainTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Chaplain Tactic")
	
	self.dance_time = 0
end

function ChaplainTactic:InitAbilities()

	-- Init ability ID's
	if (Chaplain.litany == nil) then
		Chaplain.litany = cpu_manager.stats:GetAbilityID("marines_litany_of_hatred")
	end

	if (Chaplain.catechism == nil) then
		Chaplain.catechism = cpu_manager.stats:GetAbilityID("marines_catechism_of_the_righteous_emperor")
	end

	if (Chaplain.word == nil) then
		Chaplain.word = cpu_manager.stats:GetAbilityID( "marines_word_of_emperer" )
	end
end

function ChaplainTactic:IsAttacker()
	return self:IsCommanderAttacker()
end

function ChaplainTactic:IsDefender()
	return self:IsCommanderDefender()
end

function ChaplainTactic:DoAbilities()


	--return if I didn't initialize myself
	if Chaplain.catechism == nil then
		return
	end
	
	dbAssert( Chaplain.word ~= nil )
	dbAssert( Chaplain.litany ~= nil )
	dbAssert( Chaplain.catechism ~= nil )

	Ability.DoAbilityArea( self.squad_ai, Chaplain.word, Ability.Filters.CloseInCombat, 20, 8 ) 
	Ability.DoAbilityTarget( self.squad_ai, Chaplain.litany, Ability.Filters.CloseInCombat, 6 ) 
	Ability.DoAbilityArea( self.squad_ai, Chaplain.catechism, Ability.Filters.CloseInCombat, 15, 6 ) 

	--we are dying, lower requisites for attacks
	if self.squad_ai:WasRecentlyHurt() and self.squad_ai:GetHealthPercentage() < 0.4 then
	   Ability.DoAbilityArea( self.squad_ai, Chaplain.word, Ability.Filters.CloseInCombat, 20 ) 
	   Ability.DoAbilityTarget( self.squad_ai, Chaplain.litany, Ability.Filters.CloseInCombat, 4 ) 
	   Ability.DoAbilityArea( self.squad_ai, Chaplain.catechism, Ability.Filters.CloseInCombat, 15 ) 
	end
end

function ChaplainTactic:Update()

	if (self:IsComplete()) then
		return
	end
	
	-- State machine
	if (not InfantryTactic.Update(self)) then
		return
	end
	
	local bSetRanged = false
    local bSetMelee = false
	local eStance = self.squad_ai:GetMeleeStance()
	-- Check health
    if (self.squad_ai:GetHealthPercentage() > 0.5) then
        bSetMelee = (eStance == SquadAI.MSTANCE_Ranged)
	else
        bSetRanged = (eStance == SquadAI.MSTANCE_Assault)
    end
	
	if (bSetRanged) then
        self.squad_ai:DoSetMeleeStance( SquadAI.MSTANCE_Ranged )
        self.dance_time = g_iGMT
    elseif (bSetMelee and self.stateID ~= Tactic.StateID.DoDance and g_iGMT > self.dance_time + 10) then
        self.squad_ai:DoSetDefaultMeleeStance()
        self.dance_time = 0
    end
			
	-- Check if we're busy
	if (self:IsInSubState() or self.squad_ai:IsBroken()) then
		return
	end

	if (self.squad_ai:GetMeleeStance() == SquadAI.MSTANCE_Assault) then
		if (self.squad_ai:IsInCombat() or self.squad_ai:WasRecentlyHurt()) then
			if (self:TryAttachSquad(false, true, 50, 150, self.m_fCommanderAttachHealth) == nil) then
				self:TryAttachSquadMelee()
			end
		end
	end
end
