----------------------------------------
-- File: 'librariantactic.ai'
-- Edited by Thudmeizer @ 01.10.2008

class 'LibrarianTactic' (SpaceMarineInfantryTactic)

Librarian = {}

function LibrarianTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Librarian Tactic")
	
	self.dance_time = 0
end

function LibrarianTactic:IsAttacker()
	return self:IsCommanderAttacker()
end

function LibrarianTactic:IsDefender()
	return self:IsCommanderDefender()
end

function LibrarianTactic:InitAbilities()

	-- Init ability ID's
	if (Librarian.smite == nil) then
		Librarian.smite = cpu_manager.stats:GetAbilityID( "marines_smite_pre" )
	end
	
	if (Librarian.word == nil) then
		Librarian.word = cpu_manager.stats:GetAbilityID( "marines_word_of_emperer" )
	end
	
	if (Librarian.weaken_resolve == nil) then
		Librarian.weaken_resolve = cpu_manager.stats:GetAbilityID( "marines_weaken_resolve" )
	end
end

function LibrarianTactic:DoAbilities()

	--return if I didn't initialize myself
	if Librarian.weaken_resolve == nil then
		return
	end
	
	dbAssert( Librarian.smite ~= nil )
	dbAssert( Librarian.word ~= nil )
	dbAssert( Librarian.weaken_resolve ~= nil )
	
	Ability.DoAbilityArea( self.squad_ai, Librarian.word, Ability.Filters.CloseInCombat, 20, 8 ) 
	Ability.DoAbilityPos( self.squad_ai, Librarian.smite, Ability.Filters.CloseInfantryEnemy, 8 ) 
	Ability.DoAbilityPos( self.squad_ai, Librarian.weaken_resolve, Ability.Filters.CloseInfantryEnemy, 8 )
	
	--we are dying, lower requisites for attacks
	if self.squad_ai:WasRecentlyHurt() and self.squad_ai:GetHealthPercentage() < 0.4 then
		Ability.DoAbilityArea( self.squad_ai, Librarian.word, Ability.Filters.CloseInCombat, 20 ) 
		Ability.DoAbilityPos( self.squad_ai, Librarian.smite, Ability.Filters.CloseInfantryEnemy, 4 ) 
		Ability.DoAbilityPos( self.squad_ai, Librarian.weaken_resolve, Ability.Filters.CloseInfantryEnemy, 4 ) 
	end
end

function LibrarianTactic:Update()

	if (self:IsComplete()) then
		return
	end
	
	-- State machine
	if (not InfantryTactic.Update(self)) then
		return
	end
	
	local bSetRanged = false
    local bSetMelee = false
	local eStance = self.squad_ai:GetMeleeStance()
	-- Check health
    if (self.squad_ai:GetHealthPercentage() > 0.5) then
        bSetMelee = (eStance == SquadAI.MSTANCE_Ranged)
	else
        bSetRanged = (eStance == SquadAI.MSTANCE_Assault)
    end
	
	if (bSetRanged) then
        self.squad_ai:DoSetMeleeStance( SquadAI.MSTANCE_Ranged )
        self.dance_time = g_iGMT
    elseif (bSetMelee and self.stateID ~= Tactic.StateID.DoDance and g_iGMT > self.dance_time + 10) then
        self.squad_ai:DoSetDefaultMeleeStance()
        self.dance_time = 0
    end
		
	if (self.squad_ai:GetMeleeStance() == SquadAI.MSTANCE_Assault) then				
		if (self.squad_ai:IsInCombat() or self.squad_ai:WasRecentlyHurt()) then
			if (self:TryAttachSquad(false, true, 50, 150, self.m_fCommanderAttachHealth) == nil) then
				self:TryAttachSquadMelee()
			end
		end
	end
end

