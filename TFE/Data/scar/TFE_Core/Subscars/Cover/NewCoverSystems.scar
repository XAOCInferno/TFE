-------------------------------------------------
-- GLOBAL VARIABLES
-------------------------------------------------
g_ModsByCover = {}
local ModifierManager = ModifierManager:new();

-------------------------------------------------
-- ON INITIALIZATION 
-------------------------------------------------

function Setup_CoverModifiers()

    AddStacktrace("Setup_CoverModifiers")

    -- Generic shield modifier to show you're in cover, to be replaced later with a special verticality one
    mod_PositiveCover = Modifier_Create(MAT_Squad, "cover_event_modifier", MUT_Enable, 1, 1, "")
    table.insert(SquadModifiers, mod_PositiveCover)
    --

    -- Light Cover Bonuses
    mod_LightCover__modifier_01 = Modifier_Create(MAT_Squad, "health_rangedamage_received_1_modifier",
        MUT_Multiplication, 1, 0.75, "")
    table.insert(SquadModifiers, mod_LightCover__modifier_01)

    mod_LightCover__modifier_02 = Modifier_Create(MAT_Squad, "speed_maximum_modifier", MUT_Multiplication, 1,
        0.8999999762, "")
    table.insert(SquadModifiers, mod_LightCover__modifier_02)

    mod_LightCover__modifier_03 = Modifier_Create(MAT_Squad, "morale_rate_squad_modifier", MUT_Multiplication, 1, 1.5,
        "")
    table.insert(SquadModifiers, mod_LightCover__modifier_03)
    --

    -- Heavy Cover Bonuses
    mod_HvyCover__modifier_01 = Modifier_Create(MAT_Squad, "health_rangedamage_received_1_modifier", MUT_Multiplication,
        1, 0.5, "")
    table.insert(SquadModifiers, mod_HvyCover__modifier_01)

    mod_HvyCover__modifier_02 = Modifier_Create(MAT_Squad, "speed_maximum_modifier", MUT_Multiplication, 1, 0.75, "")
    table.insert(SquadModifiers, mod_HvyCover__modifier_02)

    mod_HvyCover__modifier_03 = Modifier_Create(MAT_Squad, "morale_rate_squad_modifier", MUT_Multiplication, 1, 2, "")
    table.insert(SquadModifiers, mod_HvyCover__modifier_03)
    --

    -- High Verticality Bonuses
    mod_HighVert__modifier_01 = Modifier_Create(MAT_Squad, "accuracy_weapon_modifier", MUT_Multiplication, 1, 1.05, "")
    table.insert(SquadModifiers, mod_HighVert__modifier_01)

    mod_HighVert__modifier_02 = Modifier_Create(MAT_Squad, "sight_radius_modifier", MUT_Multiplication, 0, 1.5, "")
    table.insert(SquadModifiers, mod_HighVert__modifier_02)

    mod_HighVert__modifier_03 = Modifier_Create(MAT_Squad, "keen_sight_radius_modifier", MUT_Multiplication, 0, 1.5, "")
    table.insert(SquadModifiers, mod_HighVert__modifier_03)

    mod_HighVert__modifier_04 = Modifier_Create(MAT_Squad, "max_range_weapon_modifier", MUT_Multiplication, 1, 1.3, "")
    table.insert(SquadModifiers, mod_HighVert__modifier_04)

    mod_HighVert__modifier_05 =
        Modifier_Create(MAT_Squad, "melee_charge_range_modifier", MUT_Multiplication, 1, 0.8, "")
    table.insert(SquadModifiers, mod_HighVert__modifier_05)

    mod_HighVert__modifier_06 = Modifier_Create(MAT_Squad, "speed_maximum_modifier", MUT_Multiplication, 1, 1.1, "")
    table.insert(SquadModifiers, mod_HighVert__modifier_06)
    --

    -- Mid Verticality Bonuses
    mod_MidVert__modifier_01 = Modifier_Create(MAT_Squad, "accuracy_weapon_modifier", MUT_Multiplication, 1, 1.025, "")
    table.insert(SquadModifiers, mod_MidVert__modifier_01)

    mod_MidVert__modifier_02 = Modifier_Create(MAT_Squad, "sight_radius_modifier", MUT_Multiplication, 0, 1.25, "")
    table.insert(SquadModifiers, mod_MidVert__modifier_02)

    mod_MidVert__modifier_03 = Modifier_Create(MAT_Squad, "keen_sight_radius_modifier", MUT_Multiplication, 0, 1.25, "")
    table.insert(SquadModifiers, mod_MidVert__modifier_03)

    mod_MidVert__modifier_04 = Modifier_Create(MAT_Squad, "max_range_weapon_modifier", MUT_Multiplication, 1, 1.15, "")
    table.insert(SquadModifiers, mod_MidVert__modifier_04)

    mod_MidVert__modifier_05 = Modifier_Create(MAT_Squad, "melee_charge_range_modifier", MUT_Multiplication, 1, 0.9, "")
    table.insert(SquadModifiers, mod_MidVert__modifier_05)

    mod_MidVert__modifier_06 = Modifier_Create(MAT_Squad, "speed_maximum_modifier", MUT_Multiplication, 1, 1.05, "")
    table.insert(SquadModifiers, mod_MidVert__modifier_06)
    --

    -- Poison Bonuses	
    mod_Poison__modifier_01 = Modifier_Create(MAT_Squad, "health_degeneration_modifier", MUT_Addition, 1, 2.5, "")
    table.insert(SquadModifiers, mod_Poison__modifier_01)

    mod_Poison__modifier_02 = Modifier_Create(MAT_Squad, "morale_rate_squad_modifier", MUT_Multiplication, 1, 0.8, "")
    table.insert(SquadModifiers, mod_Poison__modifier_02)
    --
    g_ModsByCover = { -- 0, None
    {}, -- 1, Light
    {}, -- 2, Hvy
    {}, -- 3, Negative
    {}, -- 4, Blocking 
    {}, -- 5, Stealth
    {}, -- 6 Height_High
    {mod_PositiveCover, mod_HighVert__modifier_01, mod_HighVert__modifier_02, mod_HighVert__modifier_03,
     mod_HighVert__modifier_04, mod_HighVert__modifier_05, mod_HighVert__modifier_06}, -- 7 Height_High_Light
    {mod_PositiveCover, mod_HighVert__modifier_01, mod_HighVert__modifier_02, mod_HighVert__modifier_03,
     mod_HighVert__modifier_04, mod_HighVert__modifier_05, mod_HighVert__modifier_06, mod_LightCover__modifier_01,
     mod_LightCover__modifier_02, mod_LightCover__modifier_03}, -- 8 Height_High_Heavy
    {mod_PositiveCover, mod_HighVert__modifier_01, mod_HighVert__modifier_02, mod_HighVert__modifier_03,
     mod_HighVert__modifier_04, mod_HighVert__modifier_05, mod_HighVert__modifier_06, mod_HvyCover__modifier_01,
     mod_HvyCover__modifier_02, mod_HvyCover__modifier_03}, -- 9 Height_Mid
    {mod_PositiveCover, mod_MidVert__modifier_01, mod_MidVert__modifier_02, mod_MidVert__modifier_03,
     mod_MidVert__modifier_04, mod_MidVert__modifier_05, mod_MidVert__modifier_06}, -- 10 Height_Mid_Light
    {mod_PositiveCover, mod_MidVert__modifier_01, mod_MidVert__modifier_02, mod_MidVert__modifier_03,
     mod_MidVert__modifier_04, mod_MidVert__modifier_05, mod_MidVert__modifier_06, mod_LightCover__modifier_01,
     mod_LightCover__modifier_02, mod_LightCover__modifier_03}, -- 11 Height_Mid_Heavy
    {mod_PositiveCover, mod_MidVert__modifier_01, mod_MidVert__modifier_02, mod_MidVert__modifier_03,
     mod_MidVert__modifier_04, mod_MidVert__modifier_05, mod_MidVert__modifier_06, mod_HvyCover__modifier_01,
     mod_HvyCover__modifier_02, mod_HvyCover__modifier_03}, -- 12 Poison
    {mod_Poison__modifier_01, mod_Poison__modifier_02}}

    RemoveStacktrace()

end

function Setup_NewCoverSystem()

    AddStacktrace("Setup_NewCoverSystem")

    Log(eLOG_TYPE_INFO, eLOG_SIMPLE, "Starting: 'Setup_NewCoverSystem'...")

    Setup_CoverModifiers()

    SquadDataDelegates[eSQUAD_DELEGATES.OnSquadConstructed]:Subscribe(OnSquadDataConstructed)

    Log(eLOG_TYPE_INFO, eLOG_SIMPLE, "Finished: 'Setup_NewCoverSystem'!")

    RemoveStacktrace()

end

-- When a squad is made, subscribe the cover check against them
function OnSquadDataConstructed(_Payload)

    AddStacktrace("OnSquadDataConstructed")

    ModifierManager:RegisterModifierReceiver(_Payload.sID, true)
    SquadDataDelegates[eSQUAD_DELEGATES.OnSquadCoverChanged]:Subscribe(OnSquadCoverChange)
    SquadDataDelegates[eSQUAD_DELEGATES.OnSquadDeConstructed]:Subscribe(OnSquadDataDeconstructed)

    RemoveStacktrace()

end

-- Payload contains information about squad ID, and their cover status. Handle application of modifiers
function OnSquadCoverChange(_Payload)

    AddStacktrace("OnSquadCoverChange")

    ModifierManager:RemoveAppliedModifiers(_Payload.sID --[[ID]] )

    if (g_ModsByCover[_Payload.newCover] ~= nil) then

        ModifierManager:ApplyModifiers(_Payload.sID --[[ID]] , g_ModsByCover[_Payload.newCover] --[[Mods]] )

    end
	
    RemoveStacktrace()

end

-- When a squad is unmade, unsubscibe the cover check against them
function OnSquadDataDeconstructed(_Payload)

    AddStacktrace("OnSquadDataDeconstructed")

    -- Don't need to remove mods as this squad has been destroyed
    ModifierManager:UnRegisterModifierReceiver(_Payload.sID --[[ID]] , false --[[Remove Mods?]] )
    SquadDataDelegates[eSQUAD_DELEGATES.OnSquadCoverChanged]:Unsubscribe(OnSquadCoverChange)
    SquadDataDelegates[eSQUAD_DELEGATES.OnSquadDeConstructed]:Unsubscribe(OnSquadDataDeconstructed)

    RemoveStacktrace()

end