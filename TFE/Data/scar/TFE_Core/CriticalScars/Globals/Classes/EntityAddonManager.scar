EntityAddonManager = {}
function EntityAddonManager:new (_AttachedEntityStruct, _ValidAddons)

	AddStacktrace("EntityAddonManager:new")

    local EntityAddonManagerObject = 
    {
        --Constants
	    AttachedEntityStruct = _AttachedEntityStruct,   
        ValidAddons = _ValidAddons,
        CompletedAddons = {},
        NumberOfAddons = 0,
        CompletedAddonIndexByNameDictionary = {}
    }
	
	self.__index = self

	local globalObject = setmetatable(EntityAddonManagerObject, self)
	
	RegisterClass(EntityAddonManagerObject, "EntityAddonManager")
	
	RemoveStacktrace()
	
	return globalObject

end

function EntityAddonManager:LateConstructor()

	AddStacktrace("EntityAddonManager:LateConstructor")

    self.NumberOfAddons = table.getn(self.ValidAddons)

    for i = 1, self.NumberOfAddons do

        self.CompletedAddonIndexByNameDictionary[self.ValidAddons[i]] = i
        self.CompletedAddons[i] = PurchasedItem:new(self.ValidAddons[i], 0)

        --Dbg functionality to easily force the addon
        --Entity_ForceAddOn( self.AttachedEntityStruct.EntityID, self.CompletedAddons[i].ID )

    end

    RemoveStacktrace()

end

function EntityAddonManager:UpdateAddonsList()

	AddStacktrace("EntityAddonManager:UpdateAddonsList")

    for i = 1, self.NumberOfAddons do

        if(self.AttachedEntityStruct.EntityAvgHealth ~= 0.0) then

            if(Entity_ContainsAddOn(self.AttachedEntityStruct.EntityID, self.ValidAddons[i])) then

                self.CompletedAddons[i].Count = 1

            else

                self.CompletedAddons[i].Count = 0
                
            end

        end

    end


    RemoveStacktrace()

end

function EntityAddonManager:GetAddonCount(_AddonID)

	AddStacktrace("EntityAddonManager:GetAddonCount")

    local count = 0
    local index = self.CompletedAddonIndexByNameDictionary[_AddonID]

    if(index ~= nil) then
        
        count = self.CompletedAddons[index].Count

    else
        
        Log(eLOG_LOG_TYPE_ERROR, eLOG_FULL, "Addon with ID '".._AddonID.."' not setup in EntityAddonManager!") 

    end

    RemoveStacktrace()

    return count

end

--[[This can likely be a shared function later]]
function EntityAddonManager:Deconstruct()

    setmetatable(self, nil)

end